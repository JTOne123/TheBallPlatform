<?xml version="1.0" encoding="utf-8"?>
<!--
<TheBallCoreAbstraction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../TheBallCoreABS/TheBallCore/Content_v1_0/TheBallCore_v1_0.xsd">
-->
<TheBallCoreAbstraction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="TheBallCore_v1_0.xsd">
  <InstanceOfTheBall semanticDomainName="TheBall.Index">
    <DigitalInterface>
      <InterfaceModel>
        <InterfaceObject name="UserQuery" designDesc="User query item">
          <InterfaceItems>
            <InterfaceItem name="QueryString" logicalDataType="Text_Short"/>
          </InterfaceItems>
        </InterfaceObject>
        <InterfaceObject name="QueryToken" designDesc="Query token item">
          <InterfaceItems>
            <InterfaceItem name="QueryRequestObjectDomainName" logicalDataType="Text_Short"/>
            <InterfaceItem name="QueryRequestObjectName" logicalDataType="Text_Short"/>
            <InterfaceItem name="QueryRequestObjectID" logicalDataType="Text_Short"/>
          </InterfaceItems>
        </InterfaceObject>
      </InterfaceModel>
    </DigitalInterface>
    <InformationModel>
      <InformationObject name="IndexingRequest" provideCreateMethod="false" designDesc="Request for indexing content">
        <InformationItems>
          <InformationItem name="ObjectLocations" logicalDataType="Text_Short" isCollection="true"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="QueryRequest" provideCreateMethod="false" designDesc="Request for querying content">
        <InformationItems>
          <InformationItem name="QueryString" logicalDataType="Text_Short"/>
          <InformationItem name="IsQueryCompleted" logicalDataType="TrueOrFalse_Boolean"/>
          <InformationItem name="QueryResultObjects" logicalDataType="InformationObject"
                           informationObjectName="QueryResultItem" isCollection="true"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="QueryResultItem" provideCreateMethod="false" designDesc="Query result item">
        <InformationItems>
          <InformationItem name="ObjectDomainName" logicalDataType="Text_Short" />
          <InformationItem name="ObjectName" logicalDataType="Text_Short" />
          <InformationItem name="ObjectID" logicalDataType="Text_Short" />
          <InformationItem name="Rank" logicalDataType="Number_ApproxDecimal"/>
        </InformationItems>
      </InformationObject>
    </InformationModel>
    <Operations>
      <Operation name="ReleaseIndexerResources">
        <OperationSpec>
          <Description>Release indexing resources (such as cloud drive mount)</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="ResourceInfo" dataType="AttemptToBecomeInfrastructureIndexerReturnValue" designDesc="Allocated resources" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <MethodExecute name="ReleaseResources" designDesc="Release resources" state="implemented">
              <Parameter name="ResourceInfo"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="AttemptToBecomeInfrastructureIndexer">
        <OperationSpec>
          <Description>Attempt to claim indexer role. Mounting indexing db/storage read-write as the claim.</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="IndexName" dataType="string" designDesc="Infrastructure wide indexing name" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="IndexDriveName" dataType="string" designDesc="Index drive name to be  mounted (using CloudDriveSupport class)" state="implemented">
              <Parameter name="IndexName"/>
            </TargetDefinition>
            <MethodExecute name="MountIndexDrive" designDesc="Index drive" state="implemented">
              <Target name="IndexDriveName"/>
              <ReturnValue name="MountedDrive" dataType="AttemptToBecomeInfrastructureIndexerReturnValue" designDesc="Main execution result" state="implemented" />
            </MethodExecute>
            <TargetDefinition name="QueryQueueName" dataType="string" designDesc="Query queue name for search requests" state="implemented">
              <Parameter name="IndexName"/>
            </TargetDefinition>
            <TargetDefinition name="IndexRequestQueueName" dataType="string" designDesc="Query queue name for search requests" state="implemented">
              <Parameter name="IndexName"/>
            </TargetDefinition>
            <MethodExecute name="EnsureQueuesIfMountSucceeded" designDesc="Create queues if mount succeeded" state="implemented">
              <Target name="MountIndexDriveOutput.Success" />
              <Target name="QueryQueueName"/>
              <Target name="IndexRequestQueueName"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
        <OperationReturnValues>
          <ReturnValue dataType="bool" name="Success" designDesc="Success, if attempt to claim indexing was succesful" state="implemented" />
          <ReturnValue name="CloudDrive" dataType="Microsoft.WindowsAzure.StorageClient.CloudDrive" designDesc="Created drive" state="implemented"/>
          <ReturnValue name="Exception" dataType="System.Exception" designDesc="Error causing exception" state="implemented"/>
          <Target name="MountIndexDriveOutput"/>
        </OperationReturnValues>
      </Operation>
      <Operation name="IndexInformation">
        <OperationSpec>
          <Description>Index information object </Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="IndexingRequest" dataType="IndexingRequest" designDesc="Indexing request object" state="designApproved"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <MethodExecute name="PerformIndexing" designDesc="Perform indexing of the object" state="implemented">
              <Parameter name="IndexingRequest"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="QueryIndexedInformation">
        <OperationSpec>
          <Description>Index information object </Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="QueryRequest" dataType="QueryRequest" designDesc="Query request object" state="implemented"/>
          <Parameter name="IndexName" dataType="string" designDesc="Index name to perform query against" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="QueryID" dataType="string" designDesc="Obtain trackable ID for query" state="implemented">
              <Parameter name="QueryRequest"/>
            </TargetDefinition>
            <TargetDefinition name="QueryQueueName" dataType="string" designDesc="Query queue name for search requests" state="implemented">
              <Parameter name="IndexName"/>
            </TargetDefinition>
            <MethodExecute name="QueueQueryRequest" designDesc="Queue query request" state="implemented">
              <Parameter name="QueryRequest"/>
              <Target name="QueryQueueName"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
        <OperationReturnValues>
          <ReturnValue name="QueryTrackableID" dataType="string" designDesc="Query ID token" state="implemented" />
          <Target name="QueryID"/>
        </OperationReturnValues>
      </Operation>
      <Operation name="PerformUserQuery">
        <OperationSpec>
          <Description>Perform user web query</Description>
        </OperationSpec>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="QueryObject" dataType="UserQuery" designDesc="Retrieve query object from JSON content" state="implemented" />
            <OperationExecute name="PerformQuery" targetOperationName="PrepareAndExecuteQuery" designDesc="Perform query request" state="implemented">
              <Target name="QueryObject"/>
              <ReturnValue name="QueryTrackableRequest" dataType="QueryRequest" designDesc="Trackable active query object" state="implemented"/>
            </OperationExecute>
            <TargetDefinition name="ResponseContentObject" dataType="QueryToken" designDesc="Query response token" state="implemented">
              <Target name="PerformQueryOutput"/>
            </TargetDefinition>
            <MethodExecute name="WriteContentToHttpResponse" designDesc="Write query token to http response" state="implemented">
              <Target name="ResponseContentObject"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="PrepareAndExecuteQuery">
        <OperationSpec>
          <Description>Prepare query object and execute the async </Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="QueryString" dataType="string" designDesc="Query string" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="QueryRequest" name="RequestObject" designDesc="Request object to prepare and push execute for" state="implemented">
              <Parameter name="QueryString"/>
            </TargetDefinition>
            <MethodExecute name="StoreObject" designDesc="Store query request object" state="implemented">
              <Target name="RequestObject"/>
            </MethodExecute>
            <MethodExecute name="PutQueryRequestToQueryQueue" designDesc="Put query request to query queue." state="implemented">
              <Target name="RequestObject"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
        <OperationReturnValues>
          <ReturnValue dataType="QueryRequest" name="ActiveRequest" designDesc="Active request" state="implemented"/>
          <Target name="RequestObject"/>
        </OperationReturnValues>
      </Operation>
      <Operation name="FilterAndSubmitIndexingRequests">
        <OperationSpec>
          <Description>Filter given information objects and submit (passed) objects for background indexing</Description>
        </OperationSpec>
      <Parameters>
        <Parameter name="CandidateObjectLocations" dataType="string[]" designDesc="Object target locations" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="ObjectsToIndex" dataType="string[]" designDesc="Filtered list of objects to index" state="implemented">
            <Parameter name="CandidateObjectLocations"/>
          </TargetDefinition>
          <TargetDefinition name="IndexingRequest" dataType="IndexingRequest" designDesc="Indexing request object" state="implemented">
            <Target name="ObjectsToIndex"/>
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store object" state="implemented">
            <Target name="IndexingRequest"/>
          </MethodExecute>
          <MethodExecute name="PutIndexingRequestToQueue" designDesc="Put indexing request to queue" state="implemented">
            <Target name="IndexingRequest"/>
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      </Operation>
    </Operations>
    <Subscriptions />
  </InstanceOfTheBall>
</TheBallCoreAbstraction>