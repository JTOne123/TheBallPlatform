<?xml version="1.0"?>
<OperationAbstraction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://tempuri.org/Operation_v1_0.xsd">
  <Operations codeNamespace="TheBall.CORE">
    <Operation name="CreateSpecifiedInformationObjectWithValues">
      <OperationSpec>
        <Description>Creates information object, sets it values and stores it</Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Object owner" state="designApproved" />
        <Parameter name="ObjectDomainName" dataType="string" designDesc="Object domain" state="designApproved" />
        <Parameter name="ObjectName" dataType="string" designDesc="Object name" state="designApproved" />
        <Parameter name="HttpFormData" dataType="NameValueCollection" designDesc="Http POST data. Unprocessed and unfiltered." state="designApproved" />
        <Parameter name="HttpFileData" dataType="System.Web.HttpFileCollection" designDesc="Http File data" state="designApproved" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="CatchInvalidDomains" designDesc="Catch and throw an exception for invalid domains (system reserved)" state="implemented">
            <Parameter name="ObjectDomainName" />
          </MethodExecute>
          <TargetDefinition name="CreatedObject" dataType="IInformationObject" designDesc="Object that is created" state="designApproved">
            <Parameter name="Owner" />
            <Parameter name="ObjectDomainName" />
            <Parameter name="ObjectName" />
          </TargetDefinition>
          <MethodExecute name="CreateInternalObjects" designDesc="Create internal objects, whose values will be set after creation." state="implemented">
            <Parameter name="HttpFormData" />
            <Target name="CreatedObject" />
          </MethodExecute>
          <TargetDefinition name="FieldValues" dataType="NameValueCollection" designDesc="Filtered field value collection. Filter by non-prefix, add ID to keys. Reflect also to internal objects notation with ___ names texts." state="designApproved">
            <Parameter name="HttpFormData" />
            <Target name="CreatedObject" />
          </TargetDefinition>
          <TargetDefinition name="ObjectLinkValues" dataType="NameValueCollection" designDesc="Filtered object link value collection. Filter by Object_ prefix, add ID to keys." state="designApproved">
            <Parameter name="HttpFormData" />
            <Target name="CreatedObject" />
          </TargetDefinition>
          <TargetDefinition name="BinaryContentFiles" dataType="Dictionary&lt;string, System.Web.HttpPostedFile&gt;" designDesc="Filtered binary content value collection. Filter by File_ prefix, add ID to keys." state="designApproved">
            <Parameter name="HttpFormData" />
            <Parameter name="HttpFileData" />
            <Target name="CreatedObject" />
          </TargetDefinition>
          <MethodExecute name="SetFieldValues" designDesc="Set field values of created object." state="designApproved">
            <Target name="CreatedObject" />
            <Target name="FieldValues" />
          </MethodExecute>
          <MethodExecute name="SetObjectLinks" designDesc="Set object links of created object." state="designApproved">
            <Target name="CreatedObject" />
            <Target name="ObjectLinkValues" />
          </MethodExecute>
          <MethodExecute name="StoreInitialObject" designDesc="Stores the created object first time - with set values." state="designApproved">
            <Parameter name="Owner" />
            <Target name="CreatedObject" />
          </MethodExecute>
          <MethodExecute name="SetBinaryContent" designDesc="Sets binary content of created object." state="designApproved">
            <Parameter name="Owner" />
            <Target name="CreatedObject" />
            <Target name="BinaryContentFiles" />
          </MethodExecute>
          <MethodExecute name="StoreCompleteObject" designDesc="Stores the created object - with all set values." state="designApproved">
            <Parameter name="Owner" />
            <Target name="CreatedObject" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="DeleteSpecifiedInformationObject">
      <OperationSpec>
        <Description>
            Deletes specified information object.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Object owner" state="designApproved" />
        <Parameter name="ObjectDomainName" dataType="string" designDesc="Object domain" state="designApproved" />
        <Parameter name="ObjectName" dataType="string" designDesc="Object name" state="designApproved" />
        <Parameter name="ObjectID" dataType="string" designDesc="Object unique ID" state="designApproved" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="CatchInvalidDomains" designDesc="Catch and throw an exception for invalid domains (system reserved)" state="implemented">
            <Parameter name="ObjectDomainName" />
          </MethodExecute>
          <TargetDefinition name="ObjectToDelete" dataType="IInformationObject" designDesc="Object that is created" state="designApproved">
            <Parameter name="Owner" />
            <Parameter name="ObjectDomainName" />
            <Parameter name="ObjectName" />
            <Parameter name="ObjectID" />
          </TargetDefinition>
          <MethodExecute name="DeleteObject" designDesc="Delete the object." state="designApproved">
            <Target name="ObjectToDelete" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateDeviceMembership">
      <OperationSpec>
        <Description>
            Creates device membership for security context for owner.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="DeviceDescription" dataType="string" designDesc="Description of the device" state="implemented" />
        <Parameter name="ActiveSymmetricAESKey" dataType="byte[]" designDesc="Current active AES-256 key" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="CreatedDeviceMembership" dataType="DeviceMembership" designDesc="Created device membership" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="DeviceDescription" />
            <Parameter name="ActiveSymmetricAESKey" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="CreatedDeviceMembership" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      <OperationReturnValues>
        <ReturnValue name="DeviceMembership" dataType="DeviceMembership" designDesc="Created device membership ID" state="implemented" />
        <Target name="CreatedDeviceMembership" />
      </OperationReturnValues>
    </Operation>
    <Operation name="SetDeviceMembershipValidationAndActiveStatus">
      <OperationSpec>
        <Description>
            Set device membership validation.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="DeviceMembershipID" dataType="string" designDesc="ID of device membership" state="implemented" />
        <Parameter name="IsValidAndActive" dataType="bool" designDesc="Value for validated and active" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="DeviceMembership" dataType="DeviceMembership" designDesc="Created device membership" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="DeviceMembershipID" />
          </TargetDefinition>
          <MethodExecute name="SetDeviceValidAndActiveValue" designDesc="Set device valid and active value" state="implemented">
            <Parameter name="IsValidAndActive" />
            <Target name="DeviceMembership" />
          </MethodExecute>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="DeviceMembership" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="DeleteDeviceMembership">
      <OperationSpec>
        <Description>
            Delete device membership record entirely.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="DeviceMembershipID" dataType="string" designDesc="ID of device membership" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="DeviceMembership" dataType="DeviceMembership" designDesc="Created device membership" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="DeviceMembershipID" />
          </TargetDefinition>
          <MethodExecute name="DeleteDeviceMembership" designDesc="Delete device membership record" state="implemented">
            <Target name="DeviceMembership" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateAndSendEmailValidationForDeviceJoinConfirmation">
      <OperationSpec>
        <Description>
            Creates and sends email validation for device join confirmation.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="OwningAccount" dataType="AaltoGlobalImpact.OIP.TBAccount" designDesc="Security context owner - if an account" state="implemented" />
        <Parameter name="OwningGroup" dataType="AaltoGlobalImpact.OIP.TBCollaboratingGroup" designDesc="Security context owner - if a group" state="implemented" />
        <Parameter name="DeviceMembership" dataType="DeviceMembership" designDesc="Device membership" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="OwnerEmailAddresses" dataType="string[]" designDesc="Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
          </TargetDefinition>
          <TargetDefinition name="EmailValidation" dataType="AaltoGlobalImpact.OIP.TBEmailValidation" designDesc="Email validation item for 30 minutes" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
            <Parameter name="DeviceMembership" />
            <Target name="OwnerEmailAddresses" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store email validation object" state="implemented">
            <Target name="EmailValidation" />
          </MethodExecute>
          <MethodExecute name="SendEmailConfirmation" designDesc="Create and send email confirmation for joining the devices" state="implemented">
            <Parameter name="DeviceMembership" />
            <Target name="EmailValidation" />
            <Target name="OwnerEmailAddresses" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateAuthenticatedAsActiveDevice">
      <OperationSpec>
        <Description>
            Creates device membership FROM the group as authenticated against other group.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="AuthenticationDeviceDescription" dataType="string" designDesc="Description of the device" state="implemented" />
        <Parameter name="TargetBallHostName" dataType="string" designDesc="Target Ball instance host name. If not given, using the same host that the call was made from." state="implemented" />
        <Parameter name="TargetGroupID" dataType="string" designDesc="Target group ID to which the device membership is established" state="implemented" />
        <Parameter name="SharedSecret" dataType="string" designDesc="Shared secret with the back-end to establish connection" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="NegotiationURL" dataType="string" designDesc="Trust negotiation URL" state="implemented">
            <Parameter name="TargetBallHostName" />
            <Parameter name="TargetGroupID" />
          </TargetDefinition>
          <TargetDefinition name="AuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Created device membership client" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="AuthenticationDeviceDescription" />
            <Parameter name="SharedSecret" />
            <Target name="NegotiationURL" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      <OperationReturnValues>
        <ReturnValue name="CreatedAuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Created device client membership" state="implemented" />
        <Target name="AuthenticatedAsActiveDevice" />
      </OperationReturnValues>
    </Operation>
    <Operation name="PerformNegotiationAndValidateAuthenticationAsActiveDevice">
      <OperationSpec>
        <Description>
            Negotiate and validate authentication as active device.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="AuthenticatedAsActiveDeviceID" dataType="string" designDesc="ID of device membership" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="AuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Created device membership" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="AuthenticatedAsActiveDeviceID" />
          </TargetDefinition>
          <MethodExecute name="NegotiateWithTarget" designDesc="Negotiate with target party. Set validation flag as true if succesfully negotiated." state="implemented">
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="DeleteAuthenticatedAsActiveDevice">
      <OperationSpec>
        <Description>
            Delete device membership record entirely.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="AuthenticatedAsActiveDeviceID" dataType="string" designDesc="ID of device membership" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="AuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Created device membership" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="AuthenticatedAsActiveDeviceID" />
          </TargetDefinition>
          <MethodExecute name="DeleteAuthenticatedAsActiveDevice" designDesc="Delete device membership record" state="implemented">
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateInformationOutput">
      <OperationSpec>
        <Description>
            Creates information output for security context for owner.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="OutputDescription" dataType="string" designDesc="Description of the information output" state="implemented" />
        <Parameter name="DestinationURL" dataType="string" designDesc="Information target location URL" state="implemented" />
        <Parameter name="DestinationContentName" dataType="string" designDesc="Destionation content name" state="implemented" />
        <Parameter name="LocalContentURL" dataType="string" designDesc="Local content URL" state="implemented" />
        <Parameter name="AuthenticatedDeviceID" dataType="string" designDesc="Authenticated device ID for this connection (optional)" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="CreatedInformationOutput" dataType="InformationOutput" designDesc="Created information output" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="OutputDescription" />
            <Parameter name="DestinationURL" />
            <Parameter name="DestinationContentName" />
            <Parameter name="LocalContentURL" />
            <Parameter name="AuthenticatedDeviceID" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="CreatedInformationOutput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      <OperationReturnValues>
        <ReturnValue name="InformationOutput" dataType="InformationOutput" designDesc="Created information output" state="implemented" />
        <Target name="CreatedInformationOutput" />
      </OperationReturnValues>
    </Operation>
    <Operation name="SetInformationOutputValidationAndActiveStatus">
      <OperationSpec>
        <Description>
            Set information output validation and active-statuses.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationOutputID" dataType="string" designDesc="ID of information output" state="implemented" />
        <Parameter name="IsValidAndActive" dataType="bool" designDesc="Value for validated and active" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationOutput" dataType="InformationOutput" designDesc="Information output of which to set the status" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationOutputID" />
          </TargetDefinition>
          <MethodExecute name="SetInputValidAndActiveValue" designDesc="Set input valid and active value" state="implemented">
            <Parameter name="IsValidAndActive" />
            <Target name="InformationOutput" />
          </MethodExecute>
          <MethodExecute name="StoreObject" designDesc="Store modified object" state="implemented">
            <Target name="InformationOutput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="DeleteInformationOutput">
      <OperationSpec>
        <Description>
            Delete information input source.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationOutputID" dataType="string" designDesc="ID of information output" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationOutput" dataType="InformationOutput" designDesc="Information output to delete" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationOutputID" />
          </TargetDefinition>
          <MethodExecute name="DeleteInformationOutput" designDesc="Delete information output record" state="implemented">
            <Target name="InformationOutput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateAndSendEmailValidationForInformationOutputConfirmation">
      <OperationSpec>
        <Description>
            Creates and sends email validation for information output confirmation.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="OwningAccount" dataType="AaltoGlobalImpact.OIP.TBAccount" designDesc="Security context owner - if an account" state="implemented" />
        <Parameter name="OwningGroup" dataType="AaltoGlobalImpact.OIP.TBCollaboratingGroup" designDesc="Security context owner - if a group" state="implemented" />
        <Parameter name="InformationOutput" dataType="InformationOutput" designDesc="Information output" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="OwnerEmailAddresses" dataType="string[]" designDesc="Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
          </TargetDefinition>
          <TargetDefinition name="EmailValidation" dataType="AaltoGlobalImpact.OIP.TBEmailValidation" designDesc="Email validation item for 30 minutes" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
            <Parameter name="InformationOutput" />
            <Target name="OwnerEmailAddresses" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store email validation object" state="implemented">
            <Target name="EmailValidation" />
          </MethodExecute>
          <MethodExecute name="SendEmailConfirmation" designDesc="Create and send email confirmation for approving information output" state="implemented">
            <Parameter name="InformationOutput" />
            <Target name="EmailValidation" />
            <Target name="OwnerEmailAddresses" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="PushToInformationOutput">
      <OperationSpec>
        <Description>
            Push information output to given target
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationOutputID" dataType="string" designDesc="ID of information output" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationOutput" dataType="InformationOutput" designDesc="Information output to push the data to" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationOutputID" />
          </TargetDefinition>
          <MethodExecute name="VerifyValidOutput" designDesc="Verify that output is valid and active" state="implemented">
            <Target name="InformationOutput" />
          </MethodExecute>
          <TargetDefinition name="DestinationURL" dataType="string" designDesc="Location to push the output to" state="implemented">
            <Target name="InformationOutput" />
          </TargetDefinition>
          <TargetDefinition name="DestinationContentName" dataType="string" designDesc="Destination content name" state="implemented">
            <Target name="InformationOutput" />
          </TargetDefinition>
          <TargetDefinition name="LocalContentURL" dataType="string" designDesc="Local content URL to push the output from" state="implemented">
            <Target name="InformationOutput" />
          </TargetDefinition>
          <TargetDefinition name="AuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Authenticated as device info (if available)" state="implemented">
            <Target name="InformationOutput" />
          </TargetDefinition>
          <MethodExecute name="PushToInformationOutput" designDesc="Push information to output" state="implemented">
            <Parameter name="Owner" />
            <Target name="InformationOutput" />
            <Target name="DestinationURL" />
            <Target name="DestinationContentName" />
            <Target name="LocalContentURL" />
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateInformationInput">
      <OperationSpec>
        <Description>
            Creates information input for security context for owner.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InputDescription" dataType="string" designDesc="Description of the information input" state="implemented" />
        <Parameter name="LocationURL" dataType="string" designDesc="Information source location URL" state="implemented" />
        <Parameter name="LocalContentName" dataType="string" designDesc="Local content name" state="implemented" />
        <Parameter name="AuthenticatedDeviceID" dataType="string" designDesc="Authenticated device ID for this connection (optional)" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="CreatedInformationInput" dataType="InformationInput" designDesc="Created information input" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InputDescription" />
            <Parameter name="LocationURL" />
            <Parameter name="LocalContentName" />
            <Parameter name="AuthenticatedDeviceID" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="CreatedInformationInput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      <OperationReturnValues>
        <ReturnValue name="InformationInput" dataType="InformationInput" designDesc="Created information input" state="implemented" />
        <Target name="CreatedInformationInput" />
      </OperationReturnValues>
    </Operation>
    <Operation name="SetInformationInputValidationAndActiveStatus">
      <OperationSpec>
        <Description>
            Set information input validation and active-statuses.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationInputID" dataType="string" designDesc="ID of information input" state="implemented" />
        <Parameter name="IsValidAndActive" dataType="bool" designDesc="Value for validated and active" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationInput" dataType="InformationInput" designDesc="Information input of which to set the status" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationInputID" />
          </TargetDefinition>
          <MethodExecute name="SetInputValidAndActiveValue" designDesc="Set input valid and active value" state="implemented">
            <Parameter name="IsValidAndActive" />
            <Target name="InformationInput" />
          </MethodExecute>
          <MethodExecute name="StoreObject" designDesc="Store created object" state="implemented">
            <Target name="InformationInput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="DeleteInformationInput">
      <OperationSpec>
        <Description>
            Delete information input source.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationInputID" dataType="string" designDesc="ID of device membership" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationInput" dataType="InformationInput" designDesc="Information input to delete" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationInputID" />
          </TargetDefinition>
          <MethodExecute name="DeleteInformationInput" designDesc="Delete information input record" state="implemented">
            <Target name="InformationInput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateAndSendEmailValidationForInformationInputConfirmation">
      <OperationSpec>
        <Description>
            Creates and sends email validation for information input confirmation.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="OwningAccount" dataType="AaltoGlobalImpact.OIP.TBAccount" designDesc="Security context owner - if an account" state="implemented" />
        <Parameter name="OwningGroup" dataType="AaltoGlobalImpact.OIP.TBCollaboratingGroup" designDesc="Security context owner - if a group" state="implemented" />
        <Parameter name="InformationInput" dataType="InformationInput" designDesc="Information input" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="OwnerEmailAddresses" dataType="string[]" designDesc="Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
          </TargetDefinition>
          <TargetDefinition name="EmailValidation" dataType="AaltoGlobalImpact.OIP.TBEmailValidation" designDesc="Email validation item for 30 minutes" state="implemented">
            <Parameter name="OwningAccount" />
            <Parameter name="OwningGroup" />
            <Parameter name="InformationInput" />
            <Target name="OwnerEmailAddresses" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store email validation object" state="implemented">
            <Target name="EmailValidation" />
          </MethodExecute>
          <MethodExecute name="SendEmailConfirmation" designDesc="Create and send email confirmation for joining the devices" state="implemented">
            <Parameter name="InformationInput" />
            <Target name="EmailValidation" />
            <Target name="OwnerEmailAddresses" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="FetchInputInformation">
      <OperationSpec>
        <Description>
            Fetch input information from given source
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationInputID" dataType="string" designDesc="ID of information input" state="implemented" />
        <Parameter name="QueryParameters" dataType="string" designDesc="URL query parameters" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationInput" dataType="InformationInput" designDesc="Information input to fetch the data for" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationInputID" />
          </TargetDefinition>
          <MethodExecute name="VerifyValidInput" designDesc="Verify that input is valid and active" state="implemented">
            <Target name="InformationInput" />
          </MethodExecute>
          <TargetDefinition name="InputFetchLocation" dataType="string" designDesc="Location to fetch the input into" state="implemented">
            <Target name="InformationInput" />
          </TargetDefinition>
          <TargetDefinition name="InputFetchName" dataType="string" designDesc="Name of item to store the fetched input - derived from local content name." state="implemented">
            <Target name="InformationInput" />
          </TargetDefinition>
          <TargetDefinition name="AuthenticatedAsActiveDevice" dataType="AuthenticatedAsActiveDevice" designDesc="Authenticated as device info (if available)" state="implemented">
            <Target name="InformationInput" />
          </TargetDefinition>
          <MethodExecute name="FetchInputToStorage" designDesc="Fetch input to storage" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="QueryParameters" />
            <Target name="InformationInput" />
            <Target name="InputFetchLocation" />
            <Target name="InputFetchName" />
            <Target name="AuthenticatedAsActiveDevice" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="ProcessFetchedInputs">
      <OperationSpec>
        <Description>
            Process fetched inputs
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Security context owner" state="implemented" />
        <Parameter name="InformationInputID" dataType="string" designDesc="ID of information input" state="implemented" />
        <Parameter name="ProcessingOperationName" dataType="string" designDesc="Processing operation name" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="InformationInput" dataType="InformationInput" designDesc="Information input to fetch the data for" state="implemented">
            <Parameter name="Owner" />
            <Parameter name="InformationInputID" />
          </TargetDefinition>
          <MethodExecute name="VerifyValidInput" designDesc="Verify that input is valid and active" state="implemented">
            <Target name="InformationInput" />
          </MethodExecute>
          <TargetDefinition name="InputFetchLocation" dataType="string" designDesc="Location to fetch the input into" state="implemented">
            <Target name="InformationInput" />
          </TargetDefinition>
          <MethodExecute name="ProcessInputFromStorage" designDesc="Process input from storage" state="implemented">
            <Parameter name="ProcessingOperationName" />
            <Target name="InformationInput" />
            <Target name="InputFetchLocation" />
            <ReturnValue name="ProcessingResultsToStore" dataType="IInformationObject[]" designDesc="Information objects to store as result of processing" state="implemented" />
            <ReturnValue name="ProcessingResultsToDelete" dataType="IInformationObject[]" designDesc="Information objects to delete as result of processing" state="implemented" />
          </MethodExecute>
          <MethodExecute name="StoreObjects" designDesc="Store processed objects" state="implemented">
            <Target name="ProcessInputFromStorageOutput.ProcessingResultsToStore" />
          </MethodExecute>
          <MethodExecute name="DeleteObjects" designDesc="Delete obsolete processed objects" state="implemented">
            <Target name="ProcessInputFromStorageOutput.ProcessingResultsToDelete" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="BeginAccountEmailAddressRegistration">
      <OperationSpec>
        <Description>
            Begins account email address registration. Registration needs to be confimed by clicking the email validation link that is sent to email to be registered.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="AccountID" dataType="string" designDesc="AccountID whose email is to be registered" state="implemented" />
        <Parameter name="EmailAddress" dataType="string" designDesc="Email address to add to account" state="implemented" />
        <Parameter name="RedirectUrlAfterValidation" dataType="string" designDesc="Redirect url after email validation" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="ValidateUnexistingEmail" designDesc="Validate that the email to add is not already registered" state="implemented">
            <Parameter name="EmailAddress" />
          </MethodExecute>
          <TargetDefinition name="EmailValidation" dataType="AaltoGlobalImpact.OIP.TBEmailValidation" designDesc="Email validation object prepared ready to stored and to be sent" state="implemented">
            <Parameter name="AccountID" />
            <Parameter name="EmailAddress" />
            <Parameter name="RedirectUrlAfterValidation" />
          </TargetDefinition>
          <MethodExecute name="StoreObject" designDesc="Store processed objects" state="implemented">
            <Target name="EmailValidation" />
          </MethodExecute>
          <MethodExecute name="SendEmailConfirmation" designDesc="Create and send email confirmation for validating the email" state="implemented">
            <Target name="EmailValidation" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="UnregisterEmailAddress">
      <OperationSpec>
        <Description>
              Begins account email address registration. Registration needs to be confimed by clicking the email validation link that is sent to email to be registered.
            </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="AccountID" dataType="string" designDesc="AccountID whose email is to be registered" state="implemented" />
        <Parameter name="EmailAddress" dataType="string" designDesc="Email address to add to account" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="AccountContainerBeforeGroupRemoval" dataType="AaltoGlobalImpact.OIP.AccountContainer" designDesc="AccountContainer of account" state="designApproved">
            <Parameter name="AccountID" />
          </TargetDefinition>
          <TargetDefinition name="EmailAddressID" dataType="string" designDesc="Email Address ID within AccountContainer" state="designApproved">
            <Parameter name="EmailAddress" />
            <Target name="AccountContainerBeforeGroupRemoval" />
          </TargetDefinition>
          <MethodExecute name="ExecuteUnlinkEmailAddress" designDesc="Perform unlink" state="designApproved">
            <Parameter name="AccountID" />
            <Target name="AccountContainerBeforeGroupRemoval" />
            <Target name="EmailAddressID" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="CreateGroupWithTemplates">
      <OperationSpec>
        <Description>Create group with templates</Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="GroupName" dataType="string" designDesc="Group name to be created" state="implemented" />
        <Parameter name="AccountID" dataType="string" designDesc="Account ID of initiator" state="implemented" />
        <Parameter name="TemplateNameList" dataType="string" designDesc="Comma separated list of templates to initialize group at creation" state="implemented" />
        <Parameter name="GroupDefaultRedirect" dataType="string" designDesc="Group default redirect location (optional)" state="implemented" />
        <Parameter name="RedirectUrlAfterCreation" dataType="string" designDesc="Redirect url after group creation (optional)" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="ExecuteCreateGroup" designDesc="Perform group creation" state="implemented">
            <Parameter name="GroupName" />
            <Parameter name="AccountID" />
            <ReturnValue name="GroupID" dataType="string" designDesc="GroupID of created group" state="implemented" />
          </MethodExecute>
          <MethodExecute name="CopyGroupTemplates" designDesc="Copy group templates" state="implemented">
            <Parameter name="TemplateNameList" />
            <Target name="ExecuteCreateGroupOutput" />
          </MethodExecute>
          <TargetDefinition name="GroupAsOwner" dataType="IContainerOwner" designDesc="Group as container owner" state="implemented">
            <Target name="ExecuteCreateGroupOutput" />
          </TargetDefinition>
          <OperationExecute name="SetDefaultRedirect" targetOperationName="SetOwnerWebRedirect" designDesc="Sets groups default redirect if given" state="implemented">
            <Parameter name="GroupDefaultRedirect" />
            <Target name="GroupAsOwner" />
          </OperationExecute>
          <MethodExecute name="InitializeGroupWithDefaultObjects" designDesc="Initialize group with default objects (hardcoded for now)" state="implemented">
            <Target name="GroupAsOwner" />
          </MethodExecute>
          <MethodExecute name="RedirectToGivenUrl" designDesc="Redirect to url if given" state="implemented">
            <Parameter name="RedirectUrlAfterCreation" />
            <Target name="ExecuteCreateGroupOutput" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="SetOwnerWebRedirect">
      <OperationSpec>
        <Description>
            Sets owner web redirect. Stores a text file in owner folder with redirector-specific name. Might support parameters and multiple files later on.
          </Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="Owner" dataType="IContainerOwner" designDesc="Owner whose redirection is to be set" state="implemented" />
        <Parameter name="RedirectPath" dataType="string" designDesc="Redirect path, if null or empty, the redirection is to be removed." state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="SetRedirection" designDesc="Sets the redirection file for owner." state="implemented">
            <Parameter name="Owner" />
            <Parameter name="RedirectPath" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="ProcessAllResourceUsagesToOwnerCollections">
      <OperationSpec>
        <Description>Process all request usage records to owner collections. Call repeatedly proper batch processing operation(s). Break if operation doesn't process for any reason, such as failing to acquire lock.</Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="ProcessBatchSize" dataType="int" designDesc="Batch size to process as a block." state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <MethodExecute name="ExecuteBatchProcessor" designDesc="Execute batch processor with given batch size until there are less than batch size left" state="implemented">
            <Parameter name="ProcessBatchSize" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
    </Operation>
    <Operation name="ProcessBatchOfResourceUsagesToOwnerCollections">
      <OperationSpec>
        <Description>Process request usage records to owner collections. Process given amount at a time, acquire lock to allow parallel launches. Don't process if the minimum number is not met.</Description>
      </OperationSpec>
      <Parameters>
        <Parameter name="ProcessBatchSize" dataType="int" designDesc="Batch size to process as a block." state="implemented" />
        <Parameter name="ProcessIfLess" dataType="bool" designDesc="Process if less than requested size" state="implemented" />
      </Parameters>
      <Execution>
        <SequentialExecution>
          <TargetDefinition name="BatchToProcess" dataType="Microsoft.WindowsAzure.StorageClient.CloudBlockBlob[]" designDesc="Retrieve block blob list to process - and acquire lock if possible. Null if doesn't match requirement or fail to acquire lock" state="implemented">
            <Parameter name="ProcessBatchSize" />
            <Parameter name="ProcessIfLess" />
          </TargetDefinition>
          <MethodExecute name="ProcessBatch" designDesc="Process batch if not null." state="implemented">
            <Target name="BatchToProcess" />
          </MethodExecute>
          <MethodExecute name="DeleteProcessedItems" designDesc="Delete processed blobs" state="implemented">
            <Target name="BatchToProcess" />
          </MethodExecute>
          <MethodExecute name="ReleaseLock" designDesc="Release lock if acquired" state="implemented">
            <Target name="BatchToProcess" />
          </MethodExecute>
        </SequentialExecution>
      </Execution>
      <OperationReturnValues>
        <ReturnValue name="ProcessedAnything" dataType="bool" designDesc="Did the operation process anything" state="implemented" />
        <ReturnValue name="ProcessedFullCount" dataType="bool" designDesc="Did the operation have full batch size to process" state="implemented" />
        <Parameter name="ProcessBatchSize" />
        <Target name="BatchToProcess" />
      </OperationReturnValues>
    </Operation>
  </Operations>
</OperationAbstraction>