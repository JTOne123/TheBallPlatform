<?xml version="1.0" encoding="utf-8"?>
<TheBallCoreAbstraction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="TheBallCore_v1_0.xsd">
  <InstanceOfTheBall semanticDomainName="TheBall.Payments">
    <DigitalInterface>
      <InterfaceModel>
        <InterfaceObject name="PaymentToken" designDesc="Payment authorized token">
          <InterfaceItems>
            <InterfaceItem name="id" logicalDataType="Text_Short"/>
            <InterfaceItem name="currentproduct" logicalDataType="Text_Short"/>
            <InterfaceItem name="email" logicalDataType="Text_Short"/>
          </InterfaceItems>
        </InterfaceObject>
      </InterfaceModel>
    </DigitalInterface>
    <InformationModel>
      <!--
      <InformationObject name="Payment" designDesc="Payment object">
        
      </InformationObject>
      -->
      <InformationObject name="GroupSubscriptionPlanCollection" designDesc="Collection of group subscription plans">
        <CollectionFor collectionType="Master" contentInformationObjectName="GroupSubscriptionPlan"/>
      </InformationObject>
      <InformationObject name="GroupSubscriptionPlan" designDesc="Group subscription plan item, including the group IDs" provideCreateMethod="false">
        <InformationItems>
          <InformationItem name="PlanName" logicalDataType="Text_Short"/>
          <InformationItem name="Description" logicalDataType="Text_Long"/>
          <InformationItem name="GroupIDs" logicalDataType="Text_Short" isCollection="true"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="AccountPaymentCollection" designDesc="Collection of account payment infos">
        <CollectionFor collectionType="Master" contentInformationObjectName="AccountPaymentInfo"/>
      </InformationObject>
      <InformationObject name="AccountPaymentInfo" designDesc="Account Payment Info" provideCreateMethod="false">
        <InformationItems>
          <InformationItem name="AccountID" logicalDataType="Text_Short"/>
          <InformationItem name="PaymentItems" logicalDataType="InformationObject" informationObjectName="PaymentItem" isCollection="true"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="GroupOffering" designDesc="Group offering item">
        <InformationItems>
          <InformationItem name="GroupID" logicalDataType="Text_Short"/>
          <InformationItem name="Description" logicalDataType="Text_Long"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="PaymentItem" designDesc="Generic purchaseable item">
        <InformationItems>
          <InformationItem name="TargetItemDomain" logicalDataType="Text_Short"/>
          <InformationItem name="TargetItemName" logicalDataType="Text_Short"/>
          <InformationItem name="TargetItemID" logicalDataType="Text_Short"/>
          <InformationItem name="ItemType" logicalDataType="Text_Short"/>
          <InformationItem name="ItemTypeID" logicalDataType="Text_Short"/>
          <InformationItem name="Price" logicalDataType="Text_Short"/>
          <InformationItem name="Currency" logicalDataType="Text_Short"/>
          <InformationItem name="BillingInterval" logicalDataType="Text_Short"/>
          <InformationItem name="PaidDateTime" logicalDataType="Time_DateTime"/>
          <InformationItem name="NextDueDate" logicalDataType="Time_Date"/>
        </InformationItems>
      </InformationObject>
      <InformationObject name="CustomerAccountCollection" designDesc="Collection of customer accounts">
        <CollectionFor collectionType="Master" contentInformationObjectName="CustomerAccount"/>
      </InformationObject>
      <InformationObject name="CustomerAccount" designDesc="Payment identified customer, ID based on account">
        <InformationItems>
          <InformationItem name="StripeID" logicalDataType="Text_Short"/>
          <InformationItem name="EmailAddress" logicalDataType="Text_Short"/>
          <InformationItem name="Description" logicalDataType="Text_Short"/>
        </InformationItems>
      </InformationObject>
    </InformationModel>
    <Operations>
      <Operation name="ValidatePlanContainingGroups">
        <OperationSpec>
          <Description>Validate that plan contains groups</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="PlanName" dataType="string" designDesc="Plan name to validate for groups" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="GroupSubscriptionPlan" name="GroupSubscriptionPlan" designDesc="Group subscription plan" state="implemented">
              <Parameter name="PlanName"/>
            </TargetDefinition>
            <MethodExecute name="ValidateGroupsInPlan" designDesc="Validate groups exist (at least one) in plan" state="implemented">
              <Target name="GroupSubscriptionPlan"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="ActivateAndPayGroupSubscriptionPlan">
        <OperationSpec>
          <Description>Activate and pay group subscription</Description>
        </OperationSpec>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="INT.PaymentToken" name="PaymentToken" designDesc="Obtain Stripe Token from request stream" state="implemented" />
            <MethodExecute name="ValidateMatchingEmail" designDesc="Validate that account active email matches payment token email" state="implemented">
              <Target name="PaymentToken"/>
            </MethodExecute>
            <TargetDefinition name="AccountID" dataType="string" designDesc="Active account ID" state="implemented" />
            <TargetDefinition dataType="CustomerAccount" name="CustomerAccount" designDesc="Customer account object based accountID. Created if missing" state="implemented">
              <Target name="AccountID"/>
            </TargetDefinition>
            <TargetDefinition name="PlanName" dataType="string" designDesc="Plan name from the payment token" state="implemented">
              <Target name="PaymentToken"/>
            </TargetDefinition>
            <OperationExecute name="ValidatePlan" targetOperationName="ValidatePlanContainingGroups" designDesc="Validate plan before charging for payment" state="implemented">
              <Target name="PlanName"/>
            </OperationExecute>
            <MethodExecute name="ProcessPayment" designDesc="Process payment to Stripe" state="implemented">
              <Target name="PaymentToken"/>
              <Target name="CustomerAccount"/>
            </MethodExecute>
            <OperationExecute name="GrantAccessToPaidPlan" designDesc="Grant access to paid plan" state="implemented" targetOperationName="GrantPlanAccessToAccount">
              <Target name="PlanName"/>
              <Target name="AccountID"/>
            </OperationExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="CancelGroupSubscriptionPlan">
        <OperationSpec>
          <Description>Cancel group paid subscription</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="PlanName" dataType="string" designDesc="Plan Name" state="implemented"/>
          <Parameter name="AccountID" dataType="string" designDesc="Account ID to grant access for" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="CustomerAccount" name="CustomerAccount" designDesc="Customer account object based on account ID. Must be found" state="implemented">
              <Parameter name="AccountID"/>
            </TargetDefinition>
            <MethodExecute name="CancelSubscriptionPlan" designDesc="Cancel subscription plan on Stripe" state="implemented">
              <Parameter name="PlanName"/>
              <Target name="CustomerAccount"/>
            </MethodExecute>
            <OperationExecute name="RevokeAccessToCanceledPlan" designDesc="Revoke access to canceled plan" state="implemented" targetOperationName="RevokePlanAccessFromAccount">
              <Parameter name="PlanName"/>
              <Parameter name="AccountID"/>
            </OperationExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="GrantPlanAccessToAccount">
        <OperationSpec>
          <Description>Grant plan access to account</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="PlanName" dataType="string" designDesc="Plan Name" state="implemented"/>
          <Parameter name="AccountID" dataType="string" designDesc="Account ID to grant access for" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="GroupSubscriptionPlan" dataType="GroupSubscriptionPlan" designDesc="Group subscription plan of given name" state="implemented">
              <Parameter name="PlanName"/>
            </TargetDefinition>
            <MethodExecute name="GrantAccessToAccountForPlanGroups" designDesc="Grant access to plan groups. Using GrantPaidAccessToGroup operation" state="implemented">
              <Parameter name="AccountID"/>
              <Target name="GroupSubscriptionPlan"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="GrantPaidAccessToGroup">
        <OperationSpec>
          <Description>Grant paid access to group</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="GroupID" dataType="string" designDesc="Group ID to grant access to" state="implemented"/>
          <Parameter name="AccountID" dataType="string" designDesc="Account ID to grant access for" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <MethodExecute name="AddAccountToGroup" designDesc="Add account to group by inviting and confirming. Grant as visitor role." state="implemented">
              <Parameter name="GroupID"/>
              <Parameter name="AccountID"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="RevokePlanAccessFromAccount">
        <OperationSpec>
          <Description>Revoke plan access from account</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="PlanName" dataType="string" designDesc="Plan Name" state="implemented"/>
          <Parameter name="AccountID" dataType="string" designDesc="Account ID to grant access for" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="GroupSubscriptionPlan" dataType="GroupSubscriptionPlan" designDesc="Group subscription plan of given name" state="implemented">
              <Parameter name="PlanName"/>
            </TargetDefinition>
            <MethodExecute name="RevokeAccessFromAccountForPlanGroups" designDesc="Revoke access from plan groups. Using RevokePaidAccessFromGroup operation" state="implemented">
              <Parameter name="AccountID"/>
              <Target name="GroupSubscriptionPlan"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="RevokePaidAccessFromGroup">
        <OperationSpec>
          <Description>Revoke paid access to group</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="GroupID" dataType="string" designDesc="Group ID to revoke access from" state="implemented"/>
          <Parameter name="AccountID" dataType="string" designDesc="Account ID to revoke access from" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <MethodExecute name="RemoveAccountFromGroup" designDesc="Remove account from group." state="implemented">
              <Parameter name="GroupID"/>
              <Parameter name="AccountID"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="ProcessPayment">
        <OperationSpec>
          <Description>Process Stripe payment</Description>
        </OperationSpec>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="INT.PaymentToken" name="PaymentToken" designDesc="Obtain Stripe Token from request stream" state="implemented" />
            <MethodExecute name="ValidateMatchingEmail" designDesc="Validate that account active email matches payment token email" state="implemented">
              <Target name="PaymentToken"/>
            </MethodExecute>
            <TargetDefinition dataType="CustomerAccount" name="CustomerAccount" designDesc="Customer account object based on active account ID. Created if missing" state="implemented" />
            <MethodExecute name="ProcessPayment" designDesc="Process payment to Stripe" state="implemented">
              <Target name="PaymentToken"/>
              <Target name="CustomerAccount"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="FetchCustomersFromStripe">
        <OperationSpec>
          <Description>Fetch customers from Stripe</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="GroupID" dataType="string" designDesc="Group ID to fetch the customers to" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition dataType="TheBall.CORE.IContainerOwner" designDesc="Validate group ID as valid Payments managing group" name="Owner" state="implemented">
              <Parameter name="GroupID"/>
            </TargetDefinition>
            <TargetDefinition name="StripeCustomers" dataType="Stripe.StripeCustomer[]" designDesc="Stripe customers from service call" state="implemented" />
            <TargetDefinition name="CurrentCustomers" dataType="CustomerAccountCollection" designDesc="Current customer collection" state="implemented">
              <Target name="Owner"/>
            </TargetDefinition>
            <TargetDefinition name="NewCustomersToCreate" dataType="CustomerAccount[]" designDesc="New customers to create" state="implemented">
              <Target name="Owner"/>
              <Target name="StripeCustomers"/>
              <Target name="CurrentCustomers"/>
            </TargetDefinition>
            <MethodExecute name="StoreObjects" designDesc="Store new customers" state="implemented">
              <Target name="Owner"/>
              <Target name="NewCustomersToCreate"/>
            </MethodExecute>
          </SequentialExecution>
        </Execution>
      </Operation>
      <Operation name="AssociatePaymentToGroup">
        <OperationSpec>
          <Description>Associate payment to group</Description>
        </OperationSpec>
        <Parameters>
          <Parameter name="GroupID" dataType="string" designDesc="ID of the group to associate the payment to" state="implemented"/>
          <Parameter name="PaymentID" dataType="string" designDesc="ID of the payment to connect to group" state="implemented"/>
        </Parameters>
        <Execution>
          <SequentialExecution>
            <TargetDefinition name="GroupAsOwner" dataType="TheBall.CORE.IContainerOwner" designDesc="Group as owner" state="implemented">
              <Parameter name="GroupID"/>
            </TargetDefinition>
          </SequentialExecution>
        </Execution>
      </Operation>
    </Operations>
    
    <!--
    <Subscriptions />
    -->
  </InstanceOfTheBall>
</TheBallCoreAbstraction>