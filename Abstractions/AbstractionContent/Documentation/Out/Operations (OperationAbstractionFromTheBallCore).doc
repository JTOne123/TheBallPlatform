 
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormalRed, li.MsoNormalRed, div.MsoNormalRed
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-weight:bold;
	text-decoration:underline;
	color:Red;
	}
 p.MsoNormalBlue, li.MsoNormalBlue, div.MsoNormalBlue
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-weight:bold;
	font-style:italic;
	color:Blue;
	}
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:11.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:22.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 2.0cm 70.85pt 2.0cm;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>
		<body lang=EN link=blue vlink=purple>

<div class=WordSection1>

		
		<div style='border:none;border-bottom:solid #4F81BD 1.0pt;padding:0cm 0cm 4.0pt 0cm'>
<p class="MsoTitle">Operations (OperationAbstractionFromTheBallCore)</p>
</div>
		<h1>BeginAccountEmailAddressRegistration (AccountID, EmailAddress, RedirectUrlAfterValidation)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Begins account email address registration. Registration needs to be confimed by clicking the email validation link that is sent to email to be registered.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AccountID whose email is to be registered
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		EmailAddress
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Email address to add to account
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		RedirectUrlAfterValidation
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Redirect url after email validation
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: ValidateUnexistingEmail ( EmailAddress )</h2>
		<p>		<div class="MsoNormal" >
		Validate that the email to add is not already registered
		</div>
		</p><h2>Target Definition: EmailValidation ( AccountID, EmailAddress, RedirectUrlAfterValidation )</h2>
		<p>		<div class="MsoNormal" >
		Email validation object prepared ready to stored and to be sent
		</div>
		</p><h2>Method Call: StoreObject ( EmailValidation )</h2>
		<p>		<div class="MsoNormal" >
		Store processed objects
		</div>
		</p><h2>Method Call: SendEmailConfirmation ( EmailValidation )</h2>
		<p>		<div class="MsoNormal" >
		Create and send email confirmation for validating the email
		</div>
		</p><h1>CreateAndSendEmailValidationForDeviceJoinConfirmation (OwningAccount, OwningGroup, DeviceMembership)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates and sends email validation for device join confirmation.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if an account
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBCollaboratingGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if a group
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeviceMembership
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		DeviceMembership
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Device membership
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: OwnerEmailAddresses ( OwningAccount, OwningGroup )</h2>
		<p>		<div class="MsoNormal" >
		Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails
		</div>
		</p><h2>Target Definition: EmailValidation ( OwnerEmailAddresses, OwningAccount, OwningGroup, DeviceMembership )</h2>
		<p>		<div class="MsoNormal" >
		Email validation item for 30 minutes
		</div>
		</p><h2>Method Call: StoreObject ( EmailValidation )</h2>
		<p>		<div class="MsoNormal" >
		Store email validation object
		</div>
		</p><h2>Method Call: SendEmailConfirmation ( EmailValidation, OwnerEmailAddresses, DeviceMembership )</h2>
		<p>		<div class="MsoNormal" >
		Create and send email confirmation for joining the devices
		</div>
		</p><h1>CreateAndSendEmailValidationForInformationInputConfirmation (OwningAccount, OwningGroup, InformationInput)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates and sends email validation for information input confirmation.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if an account
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBCollaboratingGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if a group
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		InformationInput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information input
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: OwnerEmailAddresses ( OwningAccount, OwningGroup )</h2>
		<p>		<div class="MsoNormal" >
		Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails
		</div>
		</p><h2>Target Definition: EmailValidation ( OwnerEmailAddresses, OwningAccount, OwningGroup, InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Email validation item for 30 minutes
		</div>
		</p><h2>Method Call: StoreObject ( EmailValidation )</h2>
		<p>		<div class="MsoNormal" >
		Store email validation object
		</div>
		</p><h2>Method Call: SendEmailConfirmation ( EmailValidation, OwnerEmailAddresses, InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Create and send email confirmation for joining the devices
		</div>
		</p><h1>CreateAndSendEmailValidationForInformationOutputConfirmation (OwningAccount, OwningGroup, InformationOutput)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates and sends email validation for information output confirmation.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if an account
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OwningGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AaltoGlobalImpact.OIP.TBCollaboratingGroup
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner - if a group
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationOutput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		InformationOutput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information output
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: OwnerEmailAddresses ( OwningAccount, OwningGroup )</h2>
		<p>		<div class="MsoNormal" >
		Owner relevant email address(es). For group - the initiator's active group email, for account - all of accounts emails
		</div>
		</p><h2>Target Definition: EmailValidation ( OwnerEmailAddresses, OwningAccount, OwningGroup, InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Email validation item for 30 minutes
		</div>
		</p><h2>Method Call: StoreObject ( EmailValidation )</h2>
		<p>		<div class="MsoNormal" >
		Store email validation object
		</div>
		</p><h2>Method Call: SendEmailConfirmation ( EmailValidation, OwnerEmailAddresses, InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Create and send email confirmation for approving information output
		</div>
		</p><h1>CreateAuthenticatedAsActiveDevice (Owner, AuthenticationDeviceDescription, TargetBallHostName, TargetGroupID, SharedSecret)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates device membership FROM the group as authenticated against other group.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticationDeviceDescription
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Description of the device
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		TargetBallHostName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Target Ball instance host name. If not given, using the same host that the call was made from.
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		TargetGroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Target group ID to which the device membership is established
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		SharedSecret
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Shared secret with the back-end to establish connection
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: NegotiationURL ( TargetBallHostName, TargetGroupID )</h2>
		<p>		<div class="MsoNormal" >
		Trust negotiation URL
		</div>
		</p><h2>Target Definition: ConnectionURL ( TargetBallHostName, TargetGroupID )</h2>
		<p>		<div class="MsoNormal" >
		Established connection URL
		</div>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( NegotiationURL, ConnectionURL, Owner, AuthenticationDeviceDescription, SharedSecret )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership client
		</div>
		</p><h2>Method Call: StoreObject ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h2>Return Value : CreateAuthenticatedAsActiveDeviceReturnValue ( AuthenticatedAsActiveDevice )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CreatedAuthenticatedAsActiveDevice
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AuthenticatedAsActiveDevice
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Created device client membership
		</div>
				</td>
				</tr>
		</table>
		</p><h1>CreateDeviceMembership (Owner, DeviceDescription, ActiveSymmetricAESKey)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates device membership for security context for owner.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeviceDescription
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Description of the device
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ActiveSymmetricAESKey
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		byte[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Current active AES-256 key
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: CreatedDeviceMembership ( Owner, DeviceDescription, ActiveSymmetricAESKey )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership
		</div>
		</p><h2>Method Call: StoreObject ( CreatedDeviceMembership )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h2>Return Value : CreateDeviceMembershipReturnValue ( CreatedDeviceMembership )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeviceMembership
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		DeviceMembership
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Created device membership ID
		</div>
				</td>
				</tr>
		</table>
		</p><h1>CreateGroupWithTemplates (GroupName, AccountID, TemplateNameList, GroupDefaultRedirect, RedirectUrlAfterCreation)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Create group with templates
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group name to be created
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Account ID of initiator
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		TemplateNameList
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Comma separated list of templates to initialize group at creation
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupDefaultRedirect
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group default redirect location (optional)
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		RedirectUrlAfterCreation
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Redirect url after group creation (optional)
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: ExecuteCreateGroup ( GroupName, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Perform group creation
		</div>
		</p><p><table border="1">
				<tr><th><div class=MsoNormal>Output value field</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		GroupID of created group
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: CopyGroupTemplates ( ExecuteCreateGroupOutput, TemplateNameList )</h2>
		<p>		<div class="MsoNormal" >
		Copy group templates
		</div>
		</p><h2>Target Definition: GroupAsOwner ( ExecuteCreateGroupOutput )</h2>
		<p>		<div class="MsoNormal" >
		Group as container owner
		</div>
		</p><h2>Operation Call: SetDefaultRedirect ( GroupAsOwner, GroupDefaultRedirect )</h2>
		<p>		<div class="MsoNormal" >
		Sets groups default redirect if given
		</div>
		</p><h2>Method Call: InitializeGroupWithDefaultObjects ( GroupAsOwner )</h2>
		<p>		<div class="MsoNormal" >
		Initialize group with default objects (hardcoded for now)
		</div>
		</p><h2>Method Call: RedirectToGivenUrl ( ExecuteCreateGroupOutput, RedirectUrlAfterCreation )</h2>
		<p>		<div class="MsoNormal" >
		Redirect to url if given
		</div>
		</p><h1>CreateInformationInput (Owner, InputDescription, LocationURL, LocalContentName, AuthenticatedDeviceID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates information input for security context for owner.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InputDescription
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Description of the information input
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		LocationURL
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information source location URL
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		LocalContentName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Local content name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticatedDeviceID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Authenticated device ID for this connection (optional)
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: CreatedInformationInput ( Owner, InputDescription, LocationURL, LocalContentName, AuthenticatedDeviceID )</h2>
		<p>		<div class="MsoNormal" >
		Created information input
		</div>
		</p><h2>Method Call: StoreObject ( CreatedInformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h2>Return Value : CreateInformationInputReturnValue ( CreatedInformationInput )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		InformationInput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Created information input
		</div>
				</td>
				</tr>
		</table>
		</p><h1>CreateInformationOutput (Owner, OutputDescription, DestinationURL, DestinationContentName, LocalContentURL, AuthenticatedDeviceID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Creates information output for security context for owner.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OutputDescription
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Description of the information output
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DestinationURL
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information target location URL
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DestinationContentName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Destionation content name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		LocalContentURL
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Local content URL
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticatedDeviceID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Authenticated device ID for this connection (optional)
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: CreatedInformationOutput ( Owner, OutputDescription, DestinationURL, DestinationContentName, LocalContentURL, AuthenticatedDeviceID )</h2>
		<p>		<div class="MsoNormal" >
		Created information output
		</div>
		</p><h2>Method Call: StoreObject ( CreatedInformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h2>Return Value : CreateInformationOutputReturnValue ( CreatedInformationOutput )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationOutput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		InformationOutput
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Created information output
		</div>
				</td>
				</tr>
		</table>
		</p><h1>CreateOrUpdateCustomUI (Owner, CustomUIName, ZipArchiveStream)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Create custom web UI from given package and name.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group for whom to create the custom UI
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CustomUIName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Custom UI name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ZipArchiveStream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Stream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Zip archive stream
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupContainer ( Owner )</h2>
		<p>		<div class="MsoNormal" >
		Group container to store the custom UI info
		</div>
		</p><h2>Method Call: ValidateCustomUIName ( CustomUIName )</h2>
		<p>		<div class="MsoNormal" >
		Validate CustomUI name to be valid. Allow only alphanumeric characters.
		</div>
		</p><h2>Target Definition: CustomUIFolder ( Owner, CustomUIName )</h2>
		<p>		<div class="MsoNormal" >
		CustomUI folder prefix with trailing /
		</div>
		</p><h2>Method Call: SetCustomUIName ( GroupContainer, CustomUIName )</h2>
		<p>		<div class="MsoNormal" >
		Set custom UI name within the list of custom UIs
		</div>
		</p><h2>Method Call: CopyUIContentsFromZipArchive ( CustomUIFolder, ZipArchiveStream )</h2>
		<p>		<div class="MsoNormal" >
		Copy UI contents from zip archive. Replace existing and delete old files.
		</div>
		</p><h2>Method Call: StoreObject ( GroupContainer )</h2>
		<p>		<div class="MsoNormal" >
		Store modified object
		</div>
		</p><h1>CreateProcess (ProcessDescription, ExecutingOperationName, InitialArguments)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Create process with initial parameters to set up
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessDescription
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process description
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ExecutingOperationName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Execting operation name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InitialArguments
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		SemanticInformationItem[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Initial arguments as semantic information items
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: Process ( ProcessDescription, ExecutingOperationName, InitialArguments )</h2>
		<p>		<div class="MsoNormal" >
		Create process object
		</div>
		</p><h2>Target Definition: OwnerProcessContainer</h2>
		<p>		<div class="MsoNormal" >
		Process container that contains all processes
		</div>
		</p><h2>Method Call: AddProcessObjectToContainerAndStoreBoth ( OwnerProcessContainer, Process )</h2>
		<p>		<div class="MsoNormal" >
		Add process object to container and store both
		</div>
		</p><h2>Return Value : CreateProcessReturnValue ( Process )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CreatedProcess
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Created process
		</div>
				</td>
				</tr>
		</table>
		</p><h1>CreateSpecifiedInformationObjectWithValues (Owner, ObjectDomainName, ObjectName, HttpFormData, HttpFileData)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Creates information object, sets it values and stores it
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		ObjectDomainName
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object domain
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		ObjectName
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		HttpFormData
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		NameValueCollection
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Http POST data. Unprocessed and unfiltered.
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		HttpFileData
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		System.Web.HttpFileCollection
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Http File data
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: CatchInvalidDomains ( ObjectDomainName )</h2>
		<p>		<div class="MsoNormal" >
		Catch and throw an exception for invalid domains (system reserved)
		</div>
		</p><h2>Target Definition: CreatedObject ( Owner, ObjectDomainName, ObjectName )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object that is created
		</div>
		</p><h2>Method Call: CreateInternalObjects ( CreatedObject, HttpFormData )</h2>
		<p>		<div class="MsoNormal" >
		Create internal objects, whose values will be set after creation.
		</div>
		</p><h2>Target Definition: FieldValues ( CreatedObject, HttpFormData )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Filtered field value collection. Filter by non-prefix, add ID to keys. Reflect also to internal objects notation with ___ names texts.
		</div>
		</p><h2>Target Definition: ObjectLinkValues ( CreatedObject, HttpFormData )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Filtered object link value collection. Filter by Object_ prefix, add ID to keys.
		</div>
		</p><h2>Target Definition: BinaryContentFiles ( CreatedObject, HttpFormData, HttpFileData )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Filtered binary content value collection. Filter by File_ prefix, add ID to keys.
		</div>
		</p><h2>Method Call: SetFieldValues ( CreatedObject, FieldValues )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Set field values of created object.
		</div>
		</p><h2>Method Call: SetObjectLinks ( CreatedObject, ObjectLinkValues )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Set object links of created object.
		</div>
		</p><h2>Method Call: StoreInitialObject ( CreatedObject, Owner )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Stores the created object first time - with set values.
		</div>
		</p><h2>Method Call: SetBinaryContent ( CreatedObject, BinaryContentFiles, Owner )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Sets binary content of created object.
		</div>
		</p><h2>Method Call: StoreCompleteObject ( CreatedObject, Owner )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Stores the created object - with all set values.
		</div>
		</p><h1>DeleteAuthenticatedAsActiveDevice (Owner, AuthenticatedAsActiveDeviceID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete device membership record entirely.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticatedAsActiveDeviceID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of device membership
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( Owner, AuthenticatedAsActiveDeviceID )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership
		</div>
		</p><h2>Method Call: CallDeleteDeviceOnRemoteSide ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Call delete device on remote side of device connection
		</div>
		</p><h2>Method Call: DeleteAuthenticatedAsActiveDevice ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Delete device membership record
		</div>
		</p><h1>DeleteCustomUI (Owner, CustomUIName)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete custom web UI that matches the given name
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group for whom to create the custom UI
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CustomUIName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Custom UI name
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupContainer ( Owner )</h2>
		<p>		<div class="MsoNormal" >
		Group container to store the custom UI info
		</div>
		</p><h2>Target Definition: CustomUIFolder ( Owner, CustomUIName )</h2>
		<p>		<div class="MsoNormal" >
		CustomUI folder prefix with trailing /
		</div>
		</p><h2>Method Call: RemoveCustomUIName ( GroupContainer, CustomUIName )</h2>
		<p>		<div class="MsoNormal" >
		Remove custom UI name within the list of custom UIs
		</div>
		</p><h2>Method Call: RemoveCustomUIContents ( CustomUIFolder )</h2>
		<p>		<div class="MsoNormal" >
		Remove UI contents from custom ui folder
		</div>
		</p><h2>Method Call: StoreObject ( GroupContainer )</h2>
		<p>		<div class="MsoNormal" >
		Store modified object
		</div>
		</p><h1>DeleteDeviceMembership (Owner, DeviceMembershipID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete device membership record entirely.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeviceMembershipID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of device membership
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: DeviceMembership ( Owner, DeviceMembershipID )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership
		</div>
		</p><h2>Method Call: DeleteDeviceMembership ( DeviceMembership )</h2>
		<p>		<div class="MsoNormal" >
		Delete device membership record
		</div>
		</p><h1>DeleteInformationInput (Owner, InformationInputID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete information input source.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of device membership
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationInput ( Owner, InformationInputID )</h2>
		<p>		<div class="MsoNormal" >
		Information input to delete
		</div>
		</p><h2>Method Call: DeleteInformationInput ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Delete information input record
		</div>
		</p><h1>DeleteInformationOutput (Owner, InformationOutputID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete information input source.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationOutputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information output
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationOutput ( Owner, InformationOutputID )</h2>
		<p>		<div class="MsoNormal" >
		Information output to delete
		</div>
		</p><h2>Method Call: DeleteInformationOutput ( InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Delete information output record
		</div>
		</p><h1>DeleteProcess (ProcessID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Delete process and remove from OwnerProcessContainer
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process ID of process to delete
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: Process ( ProcessID )</h2>
		<p>		<div class="MsoNormal" >
		Process to delete
		</div>
		</p><h2>Target Definition: OwnerProcessContainer</h2>
		<p>		<div class="MsoNormal" >
		Process container that contains all processes
		</div>
		</p><h2>Method Call: ObtainLockRemoveFromContainerAndDeleteProcess ( Process, OwnerProcessContainer, ProcessID )</h2>
		<p>		<div class="MsoNormal" >
		Remove process from container and delete process. NOTE! Obtain lock before delete process proceeding. If process is null already, remove ID if it's available in container.
		</div>
		</p><h1>DeleteSpecifiedInformationObject (Owner, ObjectDomainName, ObjectName, ObjectID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Deletes specified information object.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		ObjectDomainName
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object domain
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		ObjectName
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		ObjectID
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object unique ID
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: CatchInvalidDomains ( ObjectDomainName )</h2>
		<p>		<div class="MsoNormal" >
		Catch and throw an exception for invalid domains (system reserved)
		</div>
		</p><h2>Target Definition: ObjectToDelete ( Owner, ObjectDomainName, ObjectName, ObjectID )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Object that is created
		</div>
		</p><h2>Method Call: DeleteObject ( ObjectToDelete )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Delete the object.
		</div>
		</p><h1>ExecuteProcess (ProcessID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Executes proces with given ID
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process ID
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: Process ( ProcessID )</h2>
		<p>		<div class="MsoNormal" >
		Process object of execution
		</div>
		</p><h2>Target Definition: ProcessLockLocation ( Process )</h2>
		<p>		<div class="MsoNormal" >
		Process lock file location
		</div>
		</p><h2>Method Call: ExecuteAndStoreProcessWithLock ( ProcessLockLocation, Process )</h2>
		<p>		<div class="MsoNormal" >
		Execute process after obtaining lock, release lock afterwards - store process object if execution was performed. Don't do anything if lock was already there.
		</div>
		</p><h1>ExportOwnerContentToZip (Owner, PackageRootFolder)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Export Owner content to zip. Excluding system/core namespaces.
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Owner from whom to export.
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PackageRootFolder
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Root folder to package from the group root.
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: IncludedFolders ( Owner, PackageRootFolder )</h2>
		<p>		<div class="MsoNormal" >
		Package included folders. Filtered by SystemSupport namespace restrictions.
		</div>
		</p><h2>Operation Call: PackageOwnerContentToZip ( IncludedFolders, Owner, PackageRootFolder )</h2>
		<p>		<div class="MsoNormal" >
		Package group current content
		</div>
		</p><p><table border="1">
				<tr><th><div class=MsoNormal>Output value field</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ContentPackageObject
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentPackage
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package object created
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Return Value : ExportOwnerContentToZipReturnValue ( PackageOwnerContentToZipOutput )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ContentPackageID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package ID of the zip package
		</div>
				</td>
				</tr>
		</table>
		</p><h1>FetchInputInformation (Owner, InformationInputID, QueryParameters)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Fetch input information from given source
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information input
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		QueryParameters
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		URL query parameters
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationInput ( Owner, InformationInputID )</h2>
		<p>		<div class="MsoNormal" >
		Information input to fetch the data for
		</div>
		</p><h2>Method Call: VerifyValidInput ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Verify that input is valid and active
		</div>
		</p><h2>Target Definition: InputFetchLocation ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Location to fetch the input into
		</div>
		</p><h2>Target Definition: InputFetchName ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Name of item to store the fetched input - derived from local content name.
		</div>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Authenticated as device info (if available)
		</div>
		</p><h2>Method Call: FetchInputToStorage ( InformationInput, InputFetchLocation, InputFetchName, AuthenticatedAsActiveDevice, Owner, QueryParameters )</h2>
		<p>		<div class="MsoNormal" >
		Fetch input to storage
		</div>
		</p><h1>InitiateImportedGroupWithUnchangedID (GroupID, InitiatorAccountID, TemplateNameList)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Initiate imported group. NOTE! The ID needs to remain the same. Group contains internal structures.
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group ID to be initiated
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InitiatorAccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Account ID of initiator
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		TemplateNameList
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Comma separated list of templates to initialize group
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupAsOwner ( GroupID )</h2>
		<p>		<div class="MsoNormal" >
		Container owner
		</div>
		</p><h2>Target Definition: GroupContainer ( GroupAsOwner )</h2>
		<p>		<div class="MsoNormal" >
		Group container
		</div>
		</p><h2>Method Call: ValidateGroupContainerID ( GroupContainer, GroupID )</h2>
		<p>		<div class="MsoNormal" >
		Validate group container ID, so that it matches the referencing ID
		</div>
		</p><h2>Target Definition: GroupRoot ( GroupID )</h2>
		<p>		<div class="MsoNormal" >
		Group root item to match the group
		</div>
		</p><h2>Method Call: StoreObjects ( GroupRoot, GroupContainer )</h2>
		<p>		<div class="MsoNormal" >
		Store objects
		</div>
		</p><h2>Method Call: SetGroupInitiatorAccess ( GroupRoot, GroupContainer )</h2>
		<p>		<div class="MsoNormal" >
		Set group access as initiator only
		</div>
		</p><h2>Method Call: FixContentTypesAndMetadataOfBlobs ( GroupAsOwner )</h2>
		<p>		<div class="MsoNormal" >
		Fix content types and metadata of blobs
		</div>
		</p><h2>Method Call: FixRelativeLocationsOfInformationObjects ( GroupAsOwner )</h2>
		<p>		<div class="MsoNormal" >
		Fix relative locations of objects
		</div>
		</p><h1>PackageOwnerContent (Owner, PackageType, PackageName, Description, PackageRootFolder, IncludedFolders)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Package group content to zip from given group location
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group for whom to create the custom UI
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PackageType
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package type
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PackageName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package name
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Description
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package description
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PackageRootFolder
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Root folder to package from the group root.
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		IncludedFolders
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Folders to include in the package
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: ContentPackageObject ( Owner, PackageType, PackageName, Description, PackageRootFolder )</h2>
		<p>		<div class="MsoNormal" >
		Create content package information object
		</div>
		</p><h2>Method Call: StoreObject ( ContentPackageObject )</h2>
		<p>		<div class="MsoNormal" >
		Store content package object
		</div>
		</p><h2>Target Definition: ArchiveBlob ( ContentPackageObject )</h2>
		<p>		<div class="MsoNormal" >
		Initiate archive blob for zip block updates. Same ID, same location, .zip extension
		</div>
		</p><h2>Target Definition: ArchiveSourceBlobs ( Owner, PackageRootFolder, IncludedFolders )</h2>
		<p>		<div class="MsoNormal" >
		Source blobs for archiving
		</div>
		</p><h2>Method Call: CreateZipPackageContent ( ContentPackageObject, ArchiveSourceBlobs, ArchiveBlob, IncludedFolders )</h2>
		<p>		<div class="MsoNormal" >
		Create zip package to match the content object
		</div>
		</p><p><table border="1">
				<tr><th><div class=MsoNormal>Output value field</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		UploadedBlockList
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Uploaded block ID list
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: CommitArchiveBlob ( ArchiveBlob, CreateZipPackageContentOutput )</h2>
		<p>		<div class="MsoNormal" >
		Commit archive blob
		</div>
		</p><h2>Return Value : PackageOwnerContentReturnValue ( ContentPackageObject )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ContentPackage
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentPackage
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Content package object created and packed
		</div>
				</td>
				</tr>
		</table>
		</p><h1>PerformNegotiationAndValidateAuthenticationAsActiveDevice (Owner, AuthenticatedAsActiveDeviceID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Negotiate and validate authentication as active device.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticatedAsActiveDeviceID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of device membership
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( Owner, AuthenticatedAsActiveDeviceID )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership
		</div>
		</p><h2>Method Call: NegotiateWithTarget ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Negotiate with target party. Set validation flag as true if succesfully negotiated.
		</div>
		</p><h2>Method Call: StoreObject ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h1>ProcessAllResourceUsagesToOwnerCollections (ProcessBatchSize)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Process all request usage records to owner collections. Call repeatedly proper batch processing operation(s). Break if operation doesn't process for any reason, such as failing to acquire lock.
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessBatchSize
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		int
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Batch size to process as a block.
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: ExecuteBatchProcessor ( ProcessBatchSize )</h2>
		<p>		<div class="MsoNormal" >
		Execute batch processor with given batch size until there are less than batch size left
		</div>
		</p><h1>ProcessBatchOfResourceUsagesToOwnerCollections (ProcessBatchSize, ProcessIfLess)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Process request usage records to owner collections. Process given amount at a time, acquire lock to allow parallel launches. Don't process if the minimum number is not met.
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessBatchSize
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		int
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Batch size to process as a block.
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessIfLess
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process if less than requested size
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: BatchToProcess ( ProcessBatchSize, ProcessIfLess )</h2>
		<p>		<div class="MsoNormal" >
		Retrieve block blob list to process - and acquire lock if possible. Null if doesn't match requirement or fail to acquire lock
		</div>
		</p><h2>Method Call: ProcessBatch ( BatchToProcess )</h2>
		<p>		<div class="MsoNormal" >
		Process batch if not null.
		</div>
		</p><h2>Method Call: DeleteProcessedItems ( BatchToProcess )</h2>
		<p>		<div class="MsoNormal" >
		Delete processed blobs
		</div>
		</p><h2>Method Call: ReleaseLock ( BatchToProcess )</h2>
		<p>		<div class="MsoNormal" >
		Release lock if acquired
		</div>
		</p><h2>Return Value : ProcessBatchOfResourceUsagesToOwnerCollectionsReturnValue ( ProcessBatchSize, BatchToProcess )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessedAnything
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Did the operation process anything
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessedFullCount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Did the operation have full batch size to process
		</div>
				</td>
				</tr>
		</table>
		</p><h1>ProcessFetchedInputs (Owner, InformationInputID, ProcessingOperationName)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Process fetched inputs
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information input
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessingOperationName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Processing operation name
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationInput ( Owner, InformationInputID )</h2>
		<p>		<div class="MsoNormal" >
		Information input to fetch the data for
		</div>
		</p><h2>Method Call: VerifyValidInput ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Verify that input is valid and active
		</div>
		</p><h2>Target Definition: InputFetchLocation ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Location to fetch the input into
		</div>
		</p><h2>Method Call: ProcessInputFromStorage ( InformationInput, InputFetchLocation, ProcessingOperationName )</h2>
		<p>		<div class="MsoNormal" >
		Process input from storage
		</div>
		</p><p><table border="1">
				<tr><th><div class=MsoNormal>Output value field</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessingResultsToStore
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IInformationObject[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information objects to store as result of processing
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessingResultsToDelete
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IInformationObject[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Information objects to delete as result of processing
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: StoreObjects ( ProcessInputFromStorageOutput.ProcessingResultsToStore )</h2>
		<p>		<div class="MsoNormal" >
		Store processed objects
		</div>
		</p><h2>Method Call: DeleteObjects ( ProcessInputFromStorageOutput.ProcessingResultsToDelete )</h2>
		<p>		<div class="MsoNormal" >
		Delete obsolete processed objects
		</div>
		</p><h1>PublishGroupToWww (Owner)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Publish group content to Www-site
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group as a owner. Used to retrieve required data to publish
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupContainer ( Owner )</h2>
		<p>		<div class="MsoNormal" >
		Group container of the group
		</div>
		</p><h2>Target Definition: TargetContainerName ( GroupContainer )</h2>
		<p>		<div class="MsoNormal" >
		Target container name
		</div>
		</p><h2>Target Definition: TargetContainerOwnerString ( TargetContainerName )</h2>
		<p>		<div class="MsoNormal" >
		GroupID of targetcontainer owner
		</div>
		</p><h2>Method Call: ValidatePublishParameters ( TargetContainerOwnerString, Owner )</h2>
		<p>		<div class="MsoNormal" >
		Validate publish pre-requisites and parameters
		</div>
		</p><h2>Method Call: PublishWithWorker ( TargetContainerName, TargetContainerOwnerString, Owner )</h2>
		<p>		<div class="MsoNormal" >
		Publish website with worker call
		</div>
		</p><h1>PushToInformationOutput (Owner, InformationOutputID, LocalContentName, SpecificDestinationContentName)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Push information output to given target
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationOutputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information output
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		LocalContentName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Required of LocalContentURL ends with /
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		SpecificDestinationContentName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Optional dedicated content name - if given.
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationOutput ( Owner, InformationOutputID )</h2>
		<p>		<div class="MsoNormal" >
		Information output to push the data to
		</div>
		</p><h2>Method Call: VerifyValidOutput ( InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Verify that output is valid and active
		</div>
		</p><h2>Target Definition: DestinationURL ( InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Location to push the output to
		</div>
		</p><h2>Target Definition: DestinationContentName ( InformationOutput, SpecificDestinationContentName )</h2>
		<p>		<div class="MsoNormal" >
		Destination content name
		</div>
		</p><h2>Target Definition: LocalContentURL ( InformationOutput, LocalContentName )</h2>
		<p>		<div class="MsoNormal" >
		Local content URL to push the output from
		</div>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Authenticated as device info (if available)
		</div>
		</p><h2>Method Call: PushToInformationOutput ( InformationOutput, DestinationURL, DestinationContentName, LocalContentURL, AuthenticatedAsActiveDevice, Owner )</h2>
		<p>		<div class="MsoNormal" >
		Push information to output
		</div>
		</p><h1>RemoteDeviceCoreOperation (InputStream, OutputStream)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Remote device core operation for primitive ops to deal with device-to-device actions
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InputStream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		System.IO.Stream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Input stream for operation
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		OutputStream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		System.IO.Stream
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Input stream for operation
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: DeviceOperationData ( InputStream )</h2>
		<p>		<div class="MsoNormal" >
		Device operation data from input stream
		</div>
		</p><h2>Target Definition: CurrentDevice</h2>
		<p>		<div class="MsoNormal" >
		Current executing device (obtained through InformationContext.CurrentDevice
		</div>
		</p><h2>Method Call: PerformOperation ( CurrentDevice, DeviceOperationData )</h2>
		<p>		<div class="MsoNormal" >
		Perform specific operation based on Device Operation Data
		</div>
		</p><h2>Method Call: SerializeDeviceOperationDataToOutput ( DeviceOperationData, OutputStream )</h2>
		<p>		<div class="MsoNormal" >
		Serialize result to output
		</div>
		</p><h1>RequestProcessExecution (ProcessID, Owner)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Request process execution through worker queue
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ProcessID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Process ID to be queued
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		TheBall.CORE.IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Owner of the process
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: ActiveContainerName</h2>
		<p>		<div class="MsoNormal" >
		Active container name of instance storage
		</div>
		</p><h2>Target Definition: RequestEnvelope ( ActiveContainerName, ProcessID, Owner )</h2>
		<p>		<div class="MsoNormal" >
		Queue envelope (legacy bound to non-CORE namespace)
		</div>
		</p><h2>Method Call: PutEnvelopeToDefaultQueue ( RequestEnvelope )</h2>
		<p>		<div class="MsoNormal" >
		Put envelope to default queue
		</div>
		</p><h1>SetDeviceMembershipValidationAndActiveStatus (Owner, DeviceMembershipID, IsValidAndActive)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Set device membership validation.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeviceMembershipID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of device membership
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		IsValidAndActive
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Value for validated and active
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: DeviceMembership ( Owner, DeviceMembershipID )</h2>
		<p>		<div class="MsoNormal" >
		Created device membership
		</div>
		</p><h2>Method Call: SetDeviceValidAndActiveValue ( DeviceMembership, IsValidAndActive )</h2>
		<p>		<div class="MsoNormal" >
		Set device valid and active value
		</div>
		</p><h2>Method Call: StoreObject ( DeviceMembership )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h1>SetInformationInputValidationAndActiveStatus (Owner, InformationInputID, IsValidAndActive)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Set information input validation and active-statuses.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationInputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information input
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		IsValidAndActive
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Value for validated and active
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationInput ( Owner, InformationInputID )</h2>
		<p>		<div class="MsoNormal" >
		Information input of which to set the status
		</div>
		</p><h2>Method Call: SetInputValidAndActiveValue ( InformationInput, IsValidAndActive )</h2>
		<p>		<div class="MsoNormal" >
		Set input valid and active value
		</div>
		</p><h2>Method Call: StoreObject ( InformationInput )</h2>
		<p>		<div class="MsoNormal" >
		Store created object
		</div>
		</p><h1>SetInformationOutputValidationAndActiveStatus (Owner, InformationOutputID, IsValidAndActive)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Set information output validation and active-statuses.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Security context owner
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		InformationOutputID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of information output
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		IsValidAndActive
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		bool
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Value for validated and active
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: InformationOutput ( Owner, InformationOutputID )</h2>
		<p>		<div class="MsoNormal" >
		Information output of which to set the status
		</div>
		</p><h2>Method Call: SetInputValidAndActiveValue ( InformationOutput, IsValidAndActive )</h2>
		<p>		<div class="MsoNormal" >
		Set input valid and active value
		</div>
		</p><h2>Method Call: StoreObject ( InformationOutput )</h2>
		<p>		<div class="MsoNormal" >
		Store modified object
		</div>
		</p><h1>SetOwnerWebRedirect (Owner, RedirectPath)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
            Sets owner web redirect. Stores a text file in owner folder with redirector-specific name. Might support parameters and multiple files later on.
          
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Owner whose redirection is to be set
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		RedirectPath
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Redirect path, if null or empty, the redirection is to be removed.
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: SetRedirection ( Owner, RedirectPath )</h2>
		<p>		<div class="MsoNormal" >
		Sets the redirection file for owner.
		</div>
		</p><h1>SyncCopyContentToDeviceTarget (AuthenticatedAsActiveDeviceID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Sync-copy content to device target. Compare both sides with MD5, delete files that do not exist in copy source.
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AuthenticatedAsActiveDeviceID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Authenticated as device source for copying
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AuthenticatedAsActiveDevice ( AuthenticatedAsActiveDeviceID )</h2>
		<p>		<div class="MsoNormal" >
		AuthenticatedAsActiveDevice object
		</div>
		</p><h2>Target Definition: ContentRootLocation ( AuthenticatedAsActiveDevice )</h2>
		<p>		<div class="MsoNormal" >
		Content root location
		</div>
		</p><h2>Target Definition: ThisSideContentMD5List ( ContentRootLocation )</h2>
		<p>		<div class="MsoNormal" >
		This side content MD5 list
		</div>
		</p><h2>Method Call: CallPrepareTargetAndListItemsToCopy ( AuthenticatedAsActiveDevice, ThisSideContentMD5List )</h2>
		<p>		<div class="MsoNormal" >
		Call cleanup and retrieve list to copy from target device
		</div>
		</p><p><table border="1">
				<tr><th><div class=MsoNormal>Output value field</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ItemsToCopy
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentItemLocationWithMD5[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Items to copy to target
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ItemsDeleted
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentItemLocationWithMD5[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Items deleted on target
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: CopyItemsToCopyToTargetDevice ( AuthenticatedAsActiveDevice, CallPrepareTargetAndListItemsToCopyOutput )</h2>
		<p>		<div class="MsoNormal" >
		Copy items to copy to target device
		</div>
		</p><h2>Return Value : SyncCopyContentToDeviceTargetReturnValue ( CallPrepareTargetAndListItemsToCopyOutput )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CopiedItems
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentItemLocationWithMD5[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Copied items
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		DeletedItems
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ContentItemLocationWithMD5[]
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Deleted items
		</div>
				</td>
				</tr>
		</table>
		</p><h1>UnregisterEmailAddress (AccountID, EmailAddress)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		
              Begins account email address registration. Registration needs to be confimed by clicking the email validation link that is sent to email to be registered.
            
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		AccountID whose email is to be registered
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		EmailAddress
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Email address to add to account
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AccountContainerBeforeGroupRemoval ( AccountID )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		AccountContainer of account
		</div>
		</p><h2>Target Definition: EmailAddressID ( AccountContainerBeforeGroupRemoval, EmailAddress )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Email Address ID within AccountContainer
		</div>
		</p><h2>Method Call: ExecuteUnlinkEmailAddress ( AccountContainerBeforeGroupRemoval, EmailAddressID, AccountID )</h2>
		<p>		<div class="MsoNormal" style="color:blue;font-weight:bold;font-style:italic" >
		Perform unlink
		</div>
		</p><h1>UpdateUsageMonitoringItems (Owner, MonitoringItemTimeSpanInMinutes, MonitoringIntervalInMinutes)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Update usage monitoring of an owner
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Owner whose usage monitoring is to be updated
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		MonitoringItemTimeSpanInMinutes
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		int
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Monitoring item timespan in minutes (more than 1 interval in one item)
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		MonitoringIntervalInMinutes
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		int
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Monitoring interval in minutes
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: ValidateEqualSplitOfIntervalsInTimeSpan ( MonitoringItemTimeSpanInMinutes, MonitoringIntervalInMinutes )</h2>
		<p>		<div class="MsoNormal" >
		Validate that monitoring timespan divides equally to interval
		</div>
		</p><h2>Target Definition: CurrentMonitoringItems ( Owner )</h2>
		<p>		<div class="MsoNormal" >
		Current monitoring item entries
		</div>
		</p><h2>Target Definition: EndingTimeOfCurrentItems ( CurrentMonitoringItems )</h2>
		<p>		<div class="MsoNormal" >
		Starting time of new monitoring item(s)
		</div>
		</p><h2>Target Definition: NewResourceUsageBlobs ( EndingTimeOfCurrentItems, Owner )</h2>
		<p>		<div class="MsoNormal" >
		Resource usage collections after last monitoring item
		</div>
		</p><h2>Target Definition: StartingTimeOfNewItems ( EndingTimeOfCurrentItems, NewResourceUsageBlobs, MonitoringItemTimeSpanInMinutes )</h2>
		<p>		<div class="MsoNormal" >
		Ending time of complete monitoring item(s). Ensuring that resource records go beyond this time interval.
		</div>
		</p><h2>Target Definition: EndingTimeOfNewItems ( StartingTimeOfNewItems, NewResourceUsageBlobs, MonitoringItemTimeSpanInMinutes )</h2>
		<p>		<div class="MsoNormal" >
		Ending time of complete monitoring item(s). Ensuring that resource records go beyond this time interval.
		</div>
		</p><h2>Target Definition: ResourcesToIncludeInMonitoring ( NewResourceUsageBlobs, EndingTimeOfNewItems )</h2>
		<p>		<div class="MsoNormal" >
		Resources to include in monitoring
		</div>
		</p><h2>Target Definition: NewMonitoringItems ( StartingTimeOfNewItems, EndingTimeOfNewItems, Owner, MonitoringItemTimeSpanInMinutes, MonitoringIntervalInMinutes )</h2>
		<p>		<div class="MsoNormal" >
		New monitoring items. Empty and to be populated.
		</div>
		</p><h2>Method Call: PopulateMonitoringItems ( ResourcesToIncludeInMonitoring, NewMonitoringItems )</h2>
		<p>		<div class="MsoNormal" >
		Populate monitoring items. Inclusive start time, exclusive end time.
		</div>
		</p><h2>Method Call: StoreObjects ( NewMonitoringItems )</h2>
		<p>		<div class="MsoNormal" >
		Store new objects
		</div>
		</p><h1>UpdateUsageMonitoringSummaries (Owner, AmountOfDays)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Group usage monitoring to hourly and daily
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		Owner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		IContainerOwner
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Owner whose usage monitoring is to be updated
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AmountOfDays
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		int
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		How many days to include from history
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: SourceItems ( Owner, AmountOfDays )</h2>
		<p>		<div class="MsoNormal" >
		SourceItems from day range
		</div>
		</p><h2>Method Call: CreateUsageMonitoringSummaries ( SourceItems, Owner, AmountOfDays )</h2>
		<p>		<div class="MsoNormal" >
		Create usage monitoring summaries for 5 minute, 1 hour and 1 day intervals
		</div>
		</p></div>

</body>
</html>
		
		