 
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormalRed, li.MsoNormalRed, div.MsoNormalRed
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-weight:bold;
	text-decoration:underline;
	color:Red;
	}
 p.MsoNormalBlue, li.MsoNormalBlue, div.MsoNormalBlue
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-weight:bold;
	font-style:italic;
	color:Blue;
	}
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:11.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:22.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 2.0cm 70.85pt 2.0cm;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>
		<body lang=EN link=blue vlink=purple>

<div class=WordSection1>

		
		<div style='border:none;border-bottom:solid #4F81BD 1.0pt;padding:0cm 0cm 4.0pt 0cm'>
<p class="MsoTitle">Operations (OperationAbstractionFromTheBallPayments)</p>
</div>
		<h1>ActivateAccountPlan (PaymentToken)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Activate and pay account named plan
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PaymentToken
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		INT.PaymentToken
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Obtain Stripe Token from request stream
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: ValidateMatchingEmail ( PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Validate that account active email matches payment token email
		</div>
		</p><h2>Target Definition: AccountID</h2>
		<p>		<div class="MsoNormal" >
		Active account ID
		</div>
		</p><h2>Target Definition: CustomerAccount ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Customer account object based accountID. Created if missing
		</div>
		</p><h2>Method Call: UpdateStripeCustomerData ( CustomerAccount, PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Update Stripe customer data from payment info
		</div>
		</p><h2>Target Definition: StripeCustomerID ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Stripe customer ID
		</div>
		</p><h2>Target Definition: PlanName ( PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Plan name from the payment token
		</div>
		</p><h2>Method Call: ValidateStripePlanName ( PlanName )</h2>
		<p>		<div class="MsoNormal" >
		Validate plan name from Stripe
		</div>
		</p><h2>Target Definition: CustomersActiveSubscriptions ( StripeCustomerID )</h2>
		<p>		<div class="MsoNormal" >
		Active Stripe subscriptions of customer
		</div>
		</p><h2>Method Call: ProcessPayment ( StripeCustomerID, PlanName, CustomersActiveSubscriptions, PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Process payment to Stripe, if lacking with current plan/subscription
		</div>
		</p><h2>Method Call: StoreObjects ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Store processed object(s)
		</div>
		</p><h2>Operation Call: GrantAccessToPaidPlan ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Grant access to paid plan
		</div>
		</p><h1>ActivateAndPayGroupSubscriptionPlan</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Activate and pay group subscription
		</div>
		</p><h2>Target Definition: PaymentToken</h2>
		<p>		<div class="MsoNormal" >
		Obtain Stripe Token from request stream
		</div>
		</p><h2>Method Call: ValidateMatchingEmail ( PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Validate that account active email matches payment token email
		</div>
		</p><h2>Target Definition: AccountID</h2>
		<p>		<div class="MsoNormal" >
		Active account ID
		</div>
		</p><h2>Target Definition: CustomerAccount ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Customer account object based accountID. Created if missing
		</div>
		</p><h2>Method Call: UpdateStripeCustomerData ( CustomerAccount, PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Update Stripe customer data from payment info
		</div>
		</p><h2>Target Definition: StripeCustomerID ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Stripe customer ID
		</div>
		</p><h2>Target Definition: PlanName ( PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Plan name from the payment token
		</div>
		</p><h2>Operation Call: ValidatePlanGroups ( PlanName )</h2>
		<p>		<div class="MsoNormal" >
		Validate plan before charging for payment
		</div>
		</p><h2>Method Call: ValidateStripePlanName ( PlanName )</h2>
		<p>		<div class="MsoNormal" >
		Validate plan name from Stripe
		</div>
		</p><h2>Target Definition: CustomersActiveSubscriptions ( StripeCustomerID )</h2>
		<p>		<div class="MsoNormal" >
		Active Stripe subscriptions of customer
		</div>
		</p><h2>Target Definition: CustomersActivePlanNames ( CustomersActiveSubscriptions )</h2>
		<p>		<div class="MsoNormal" >
		Customer's active plan names
		</div>
		</p><h2>Method Call: SyncCurrentCustomerActivePlans ( CustomerAccount, CustomersActivePlanNames )</h2>
		<p>		<div class="MsoNormal" >
		Sync current plans to customer account
		</div>
		</p><h2>Method Call: ProcessPayment ( StripeCustomerID, PlanName, CustomersActivePlanNames, PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Process payment to Stripe, if lacking with current plan/subscription
		</div>
		</p><h2>Method Call: AddPlanAsActiveToCustomer ( CustomerAccount, PlanName )</h2>
		<p>		<div class="MsoNormal" >
		Add plan to customer if missing (and thus payment was processed)
		</div>
		</p><h2>Method Call: StoreObjects ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Store processed object(s)
		</div>
		</p><h2>Operation Call: GrantAccessToPaidPlan ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Grant access to paid plan
		</div>
		</p><h1>AssociatePaymentToGroup (GroupID, PaymentID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Associate payment to group
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of the group to associate the payment to
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PaymentID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		ID of the payment to connect to group
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupAsOwner ( GroupID )</h2>
		<p>		<div class="MsoNormal" >
		Group as owner
		</div>
		</p><h1>CancelAccountPlan (CancelParameters)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Cancel account default plan at current period end
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		CancelParameters
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		INT.CancelSubscriptionParams
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Cancellation parameters
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AccountID</h2>
		<p>		<div class="MsoNormal" >
		Active account ID
		</div>
		</p><h2>Target Definition: CustomerAccount ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Customer account object based accountID. Created if missing
		</div>
		</p><h2>Target Definition: StripeCustomerID ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Stripe customer ID
		</div>
		</p><h2>Method Call: RemoveCustomerPaymentSource ( StripeCustomerID )</h2>
		<p>		<div class="MsoNormal" >
		Remove current card from Stripe customer
		</div>
		</p><h2>Target Definition: PlanName ( CancelParameters )</h2>
		<p>		<div class="MsoNormal" >
		Plan name from the payment token
		</div>
		</p><h2>Target Definition: CustomersActiveSubscriptions ( StripeCustomerID )</h2>
		<p>		<div class="MsoNormal" >
		Active Stripe subscriptions of customer
		</div>
		</p><h2>Method Call: CancelSubscriptionAtPeriodEnd ( StripeCustomerID, PlanName, CustomersActiveSubscriptions )</h2>
		<p>		<div class="MsoNormal" >
		Cancel current subscription at period end
		</div>
		</p><h2>Method Call: StoreObjects ( CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Store processed object(s)
		</div>
		</p><h1>CancelGroupSubscriptionPlan</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Cancel group paid subscription
		</div>
		</p><h2>Target Definition: CancelParams</h2>
		<p>		<div class="MsoNormal" >
		Obtain parameterse from request stream
		</div>
		</p><h2>Target Definition: PlanName ( CancelParams )</h2>
		<p>		<div class="MsoNormal" >
		Plan Name
		</div>
		</p><h2>Target Definition: AccountID</h2>
		<p>		<div class="MsoNormal" >
		Account ID to grant access for
		</div>
		</p><h2>Target Definition: CustomerAccount ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Customer account object based on account ID. Must be found
		</div>
		</p><h2>Method Call: CancelSubscriptionPlan ( PlanName, CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Cancel subscription plan on Stripe
		</div>
		</p><h2>Operation Call: RevokeAccessFromCanceledPlan ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Revoke access to canceled plan
		</div>
		</p><h1>FetchCustomersFromStripe (GroupID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Fetch customers from Stripe
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group ID to fetch the customers to
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: Owner ( GroupID )</h2>
		<p>		<div class="MsoNormal" >
		Validate group ID as valid Payments managing group
		</div>
		</p><h2>Target Definition: StripeCustomers</h2>
		<p>		<div class="MsoNormal" >
		Stripe customers from service call
		</div>
		</p><h2>Target Definition: CurrentCustomers ( Owner )</h2>
		<p>		<div class="MsoNormal" >
		Current customer collection
		</div>
		</p><h2>Target Definition: NewCustomersToCreate ( Owner, StripeCustomers, CurrentCustomers )</h2>
		<p>		<div class="MsoNormal" >
		New customers to create
		</div>
		</p><h2>Method Call: StoreObjects ( Owner, NewCustomersToCreate )</h2>
		<p>		<div class="MsoNormal" >
		Store new customers
		</div>
		</p><h1>GetAccountFromStripeCustomer (StripeCustomerID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Get AccountID from Stripe ID
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		StripeCustomerID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Stripe Customer ID
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: AllCustomerAccounts</h2>
		<p>		<div class="MsoNormal" >
		All customer accounts
		</div>
		</p><h2>Target Definition: Account ( AllCustomerAccounts, StripeCustomerID )</h2>
		<p>		<div class="MsoNormal" >
		Stripe customer ID based account
		</div>
		</p><h2>Return Value : GetAccountFromStripeCustomerReturnValue ( Account )</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Return Value</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		ResultAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		CustomerAccount
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Customer account to return
		</div>
				</td>
				</tr>
		</table>
		</p><h1>GrantPaidAccessToGroup (GroupID, AccountID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Grant paid access to group
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group ID to grant access to
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Account ID to grant access for
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: AddAccountToGroup ( GroupID, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Add account to group by inviting and confirming. Grant as visitor role.
		</div>
		</p><h1>ProcessPayment</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Process Stripe payment
		</div>
		</p><h2>Target Definition: PaymentToken</h2>
		<p>		<div class="MsoNormal" >
		Obtain Stripe Token from request stream
		</div>
		</p><h2>Method Call: ValidateMatchingEmail ( PaymentToken )</h2>
		<p>		<div class="MsoNormal" >
		Validate that account active email matches payment token email
		</div>
		</p><h2>Target Definition: CustomerAccount</h2>
		<p>		<div class="MsoNormal" >
		Customer account object based on active account ID. Created if missing
		</div>
		</p><h2>Method Call: ProcessPayment ( PaymentToken, CustomerAccount )</h2>
		<p>		<div class="MsoNormal" >
		Process payment to Stripe
		</div>
		</p><h1>ProcessStripeWebhook (JSONObject)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Process Stripe launched webhook
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		JSONObject
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		INT.StripeWebhookData
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Stripe webhook request data
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: EventID ( JSONObject )</h2>
		<p>		<div class="MsoNormal" >
		Stripe event id
		</div>
		</p><h2>Target Definition: EventData ( EventID )</h2>
		<p>		<div class="MsoNormal" >
		Stripe event object
		</div>
		</p><h2>Method Call: ProcessStripeEvent ( EventData )</h2>
		<p>		<div class="MsoNormal" >
		Process Stripe event
		</div>
		</p><h1>RevokePaidAccessFromGroup (GroupID, AccountID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Revoke paid access to group
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		GroupID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Group ID to revoke access from
		</div>
				</td>
				</tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Account ID to revoke access from
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Method Call: RemoveAccountFromGroup ( GroupID, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Remove account from group.
		</div>
		</p><h1>SyncEffectivePlanAccessesToAccount (AccountID)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Grant plan access to account
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		AccountID
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Account ID to grant access for
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: Account ( AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Customer account
		</div>
		</p><h2>Target Definition: CurrentPlansBeforeSync ( Account )</h2>
		<p>		<div class="MsoNormal" >
		Group subscription plans before syncing
		</div>
		</p><h2>Target Definition: ActivePlanStatusesFromStripe ( Account )</h2>
		<p>		<div class="MsoNormal" >
		Plan statuses of account - fetched from Stripe.
		</div>
		</p><h2>Target Definition: ActivePlansFromStripe ( ActivePlanStatusesFromStripe )</h2>
		<p>		<div class="MsoNormal" >
		Group subscription plans - based on Stripe accounts.
		</div>
		</p><h2>Target Definition: GroupsToHaveAccessTo ( ActivePlansFromStripe )</h2>
		<p>		<div class="MsoNormal" >
		Group IDs of having access to
		</div>
		</p><h2>Target Definition: CurrentGroupAccesses ( CurrentPlansBeforeSync )</h2>
		<p>		<div class="MsoNormal" >
		Group IDs of current access
		</div>
		</p><h2>Target Definition: GroupsToAddAccessTo ( GroupsToHaveAccessTo, CurrentGroupAccesses )</h2>
		<p>		<div class="MsoNormal" >
		Group IDs to add access to
		</div>
		</p><h2>Target Definition: GroupsToRevokeAccessFrom ( GroupsToHaveAccessTo, CurrentGroupAccesses )</h2>
		<p>		<div class="MsoNormal" >
		Group IDs to revoke access from
		</div>
		</p><h2>Method Call: GrantAccessToGroups ( GroupsToAddAccessTo, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Grant access to missing group using GrantPaidAccessToGroup operation.
		</div>
		</p><h2>Method Call: RevokeAccessFromGroups ( GroupsToRevokeAccessFrom, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Revoke access from inactive plan groups using RevokePaidAccessFromGroup operation.
		</div>
		</p><h2>Method Call: SyncCurrentStripePlansToAccount ( Account, CurrentPlansBeforeSync, ActivePlansFromStripe )</h2>
		<p>		<div class="MsoNormal" >
		Sync current Stripe plans to account
		</div>
		</p><h2>Method Call: UpdateStatusesOnAccount ( ActivePlanStatusesFromStripe, AccountID )</h2>
		<p>		<div class="MsoNormal" >
		Update statuses on account interface object
		</div>
		</p><h1>ValidatePlanContainingGroups (PlanName)</h1>
		<h2>Specifications</h2>
		<p>		<div class="MsoNormal" >
		Validate that plan contains groups
		</div>
		</p><h2>Parameters</h2>
		<p><table border="1">
				<tr><th><div class=MsoNormal>Parameter</div></th><th><div class=MsoNormal>DataType</div></th><th><div class=MsoNormal>Description</div></th></tr>
				<tr>
				<td>
				<div class="MsoNormal" >
		PlanName
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		string
		</div>
				</td>
				<td>
				<div class="MsoNormal" >
		Plan name to validate for groups
		</div>
				</td>
				</tr>
		</table>
		</p><h2>Target Definition: GroupSubscriptionPlan ( PlanName )</h2>
		<p>		<div class="MsoNormal" >
		Group subscription plan
		</div>
		</p><h2>Method Call: ValidateGroupsInPlan ( GroupSubscriptionPlan )</h2>
		<p>		<div class="MsoNormal" >
		Validate groups exist (at least one) in plan
		</div>
		</p></div>

</body>
</html>
		
		